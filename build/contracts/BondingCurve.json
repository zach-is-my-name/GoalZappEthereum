{
  "contractName": "BondingCurve",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_tokenMintRecipient",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "setRestrictedTokens",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "protectedTokens",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "reserveRatio",
      "outputs": [
        {
          "name": "",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "sender",
          "type": "address"
        },
        {
          "name": "recipient",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_supply",
          "type": "uint256"
        },
        {
          "name": "_connectorBalance",
          "type": "uint256"
        },
        {
          "name": "_connectorWeight",
          "type": "uint32"
        },
        {
          "name": "_depositAmount",
          "type": "uint256"
        }
      ],
      "name": "calculatePurchaseReturn",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "protectionPeriod",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_supply",
          "type": "uint256"
        },
        {
          "name": "_connectorBalance",
          "type": "uint256"
        },
        {
          "name": "_connectorWeight",
          "type": "uint32"
        },
        {
          "name": "_sellAmount",
          "type": "uint256"
        }
      ],
      "name": "calculateSaleReturn",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "_addEscrowRole",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_tokenDepositor",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "unsetRestrictedTokens",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_address",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "removeTokenProtection",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isAionAddress",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "poolBalance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "recipient",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_address",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "timeProtectTokens",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isEscrow",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_escrowAddress",
          "type": "address"
        }
      ],
      "name": "setInitializedEscrow",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "amountProtected",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "gasPrice",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "amountMinted",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "totalCost",
          "type": "uint256"
        }
      ],
      "name": "LogMint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "amountWithdrawn",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "reward",
          "type": "uint256"
        }
      ],
      "name": "LogWithdraw",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "logString",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "LogBondingCurve",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "gp",
          "type": "uint256"
        }
      ],
      "name": "GasPrice",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Amount",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "restrictedTokenAmount",
          "type": "uint256"
        }
      ],
      "name": "RestrictedTokens",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "exceedsRestrictedAmount",
          "type": "uint256"
        }
      ],
      "name": "ExceedsRestricted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "message",
          "type": "string"
        }
      ],
      "name": "TransferChecked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "message0",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "num",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "message1",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "_amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "amountToSendGreaterThanZero",
          "type": "bool"
        }
      ],
      "name": "MSGSenderProtected",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_protectedTokens",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "lessThanProtected",
          "type": "bool"
        }
      ],
      "name": "CheckRequire",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "aionAddr",
          "type": "address"
        }
      ],
      "name": "AionAddressAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "EscrowRoleAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "buy",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "sellAmount",
          "type": "uint256"
        }
      ],
      "name": "sell",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_gasPrice",
          "type": "uint256"
        }
      ],
      "name": "setGasPrice",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_tokenMintRecipient\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"setRestrictedTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"protectedTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"reserveRatio\",\"outputs\":[{\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"sender\",\"type\":\"address\"},{\"name\":\"recipient\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_supply\",\"type\":\"uint256\"},{\"name\":\"_connectorBalance\",\"type\":\"uint256\"},{\"name\":\"_connectorWeight\",\"type\":\"uint32\"},{\"name\":\"_depositAmount\",\"type\":\"uint256\"}],\"name\":\"calculatePurchaseReturn\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"protectionPeriod\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_supply\",\"type\":\"uint256\"},{\"name\":\"_connectorBalance\",\"type\":\"uint256\"},{\"name\":\"_connectorWeight\",\"type\":\"uint32\"},{\"name\":\"_sellAmount\",\"type\":\"uint256\"}],\"name\":\"calculateSaleReturn\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"_addEscrowRole\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenDepositor\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"unsetRestrictedTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"removeTokenProtection\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isAionAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"poolBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"buy\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"recipient\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"timeProtectTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isEscrow\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_gasPrice\",\"type\":\"uint256\"}],\"name\":\"setGasPrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_escrowAddress\",\"type\":\"address\"}],\"name\":\"setInitializedEscrow\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"sellAmount\",\"type\":\"uint256\"}],\"name\":\"sell\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"amountProtected\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"gasPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"amountMinted\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"totalCost\",\"type\":\"uint256\"}],\"name\":\"LogMint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"amountWithdrawn\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"LogWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"logString\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"LogBondingCurve\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"gp\",\"type\":\"uint256\"}],\"name\":\"GasPrice\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Amount\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"restrictedTokenAmount\",\"type\":\"uint256\"}],\"name\":\"RestrictedTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"exceedsRestrictedAmount\",\"type\":\"uint256\"}],\"name\":\"ExceedsRestricted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"message\",\"type\":\"string\"}],\"name\":\"TransferChecked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"message0\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"num\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"message1\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"amountToSendGreaterThanZero\",\"type\":\"bool\"}],\"name\":\"MSGSenderProtected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_protectedTokens\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"lessThanProtected\",\"type\":\"bool\"}],\"name\":\"CheckRequire\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"aionAddr\",\"type\":\"address\"}],\"name\":\"AionAddressAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"EscrowRoleAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Bonding curve contract based on Bacor formula\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See `IERC20.allowance`.\"},\"approve(address,uint256)\":{\"details\":\"See `IERC20.approve`.     * Requirements:     * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See `IERC20.balanceOf`./\"},\"buy()\":{\"details\":\"Buy tokens gas ~ 77825 TODO implement maxAmount that helps prevent miner front-running\"},\"calculatePurchaseReturn(uint256,uint256,uint32,uint256)\":{\"details\":\"given a token supply, connector balance, weight and a deposit amount (in the connector token), calculates the return for a given conversion (in the main token)   * Formula: Return = _supply * ((1 + _depositAmount / _connectorBalance) ^ (_connectorWeight / 1000000) - 1)\",\"params\":{\"_connectorBalance\":\"total connector balance\",\"_connectorWeight\":\"connector weight, represented in ppm, 1-1000000\",\"_depositAmount\":\"deposit amount, in connector token\",\"_supply\":\"token total supply\"},\"return\":\"purchase return amount\"},\"calculateSaleReturn(uint256,uint256,uint32,uint256)\":{\"details\":\"given a token supply, connector balance, weight and a sell amount (in the main token), calculates the return for a given conversion (in the connector token)   * Formula: Return = _connectorBalance * (1 - (1 - _sellAmount / _supply) ^ (1 / (_connectorWeight / 1000000)))\",\"params\":{\"_connectorBalance\":\"total connector\",\"_connectorWeight\":\"constant connector Weight, represented in ppm, 1-1000000\",\"_sellAmount\":\"sell amount, in the token itself\",\"_supply\":\"token total supply\"},\"return\":\"sale return amount\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address.\"},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"sell(uint256)\":{\"details\":\"Sell tokens gas ~ 86936\",\"params\":{\"sellAmount\":\"Amount of tokens to withdraw TODO implement maxAmount that helps prevent miner front-running\"}},\"setGasPrice(uint256)\":{\"details\":\"Allows the owner to update the gas price limit\",\"params\":{\"_gasPrice\":\"The new gas price limit\"}},\"totalSupply()\":{\"details\":\"See `IERC20.totalSupply`.\"},\"transfer(address,uint256)\":{\"details\":\"See `IERC20.transfer`.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See `IERC20.transferFrom`.     * Emits an `Approval` event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of `ERC20`;     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `value`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Bonding Curve\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/zmg/Scratch/gz/GoalZappTruffle/contracts/BondingCurve.sol\":\"BondingCurve\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/zmg/Scratch/gz/GoalZappTruffle/contracts/AionRole.sol\":{\"keccak256\":\"0x3ae131cfcebea2ef770d00f75cc01794cf6e95eda942b042e75c5da779cee688\",\"urls\":[\"bzzr://50b037997150fad7c53ef058d930bd109a13db9e3bb3f881f647db54632c841c\"]},\"/home/zmg/Scratch/gz/GoalZappTruffle/contracts/BancorFormula.sol\":{\"keccak256\":\"0x1467eda4fb78d2b9aa5617deaf7cc1a776f5535eeb1e06eb70f1105283b78f67\",\"urls\":[\"bzzr://4cd02aa19cc876b2b0cce45a0b9683751cb63851bb3ad2ffcc71f2c20c305c39\"]},\"/home/zmg/Scratch/gz/GoalZappTruffle/contracts/BondingCurve.sol\":{\"keccak256\":\"0x28945cc9abdd0e7127daa084ac42620c2acc129dcf69564a4052bc3e8f353abf\",\"urls\":[\"bzzr://510f328fead55dbe089c15393df4eb6cbc242cb31aba8012181f2d6d7cd56e8c\"]},\"/home/zmg/Scratch/gz/GoalZappTruffle/contracts/Context.sol\":{\"keccak256\":\"0x982f068fa7faa9497d12b9810a87940976fa80c9945f83734f7454b177013715\",\"urls\":[\"bzzr://2ea98a2d2602d77cb15d49f43e457e68e1287eae095f074a905c9c1cb11bc465\"]},\"/home/zmg/Scratch/gz/GoalZappTruffle/contracts/ERC20.sol\":{\"keccak256\":\"0x02282068a5ddb926640aac945f279c24747b0be8f380f975ae9bf96640bfb853\",\"urls\":[\"bzzr://b154b43707c80453c29b214cd75b3a18a7fc49b9e20483973a49781422752d77\"]},\"/home/zmg/Scratch/gz/GoalZappTruffle/contracts/EscrowRole.sol\":{\"keccak256\":\"0x50651bdecceef0cc007d147e1c894f9b76ad3147c13fea8f3308b5602ca0b4fe\",\"urls\":[\"bzzr://8a18740309013fc298343bf1453c203ab28a7c2687d6635fa5637a738d22da87\"]},\"/home/zmg/Scratch/gz/GoalZappTruffle/contracts/GoalZappToken.sol\":{\"keccak256\":\"0xf194c595842222a24fe1326c41167fd70f36752d8e3a42f87d91c8e2a2ae54d6\",\"urls\":[\"bzzr://7e428f8ac15cdaa44d1a3e8bc670c09af3cd6dbb48829ddd4d537176bcb7b305\"]},\"/home/zmg/Scratch/gz/GoalZappTruffle/contracts/IERC20.sol\":{\"keccak256\":\"0x90e8c2521653bbb1768b05889c5760031e688d9cd361f167489b89215e201b95\",\"urls\":[\"bzzr://aa8b45b57edafc3d67bc5d916327ea16807fae33f753ca163ae0c4061b789766\"]},\"/home/zmg/Scratch/gz/GoalZappTruffle/contracts/Ownable.sol\":{\"keccak256\":\"0x6facc575c3d268b31dceb36d0f896533d4abd414a3b16195096a48f47f80bdc0\",\"urls\":[\"bzzr://e5a31fe488e6085232f0bb01020a0a6faee1c5846ff9d441f03a1dd7b3b1f55d\"]},\"/home/zmg/Scratch/gz/GoalZappTruffle/contracts/Power.sol\":{\"keccak256\":\"0xdff1335c29fc14f5b52dba9258aa0d1364ea689341f282367219032e1cb34a89\",\"urls\":[\"bzzr://3ce5ffa5e2b74d3ebf530f864a592b034b57e3fbe6c358d7a0df967fd53edf37\"]},\"/home/zmg/Scratch/gz/GoalZappTruffle/contracts/Protected.sol\":{\"keccak256\":\"0x2071598c305fc5ea62180632acd50645711c82bac241f4ba13a1a889382e163c\",\"urls\":[\"bzzr://f4c058869295936b3b03e78c81e5b9f2c9c91d3f8bdfc34e3df02a367cc3c5ad\"]},\"/home/zmg/Scratch/gz/GoalZappTruffle/contracts/Restricted.sol\":{\"keccak256\":\"0x80105859ed20a3aef66d9b9d7f44578b7c60e802edec9f2f499d35e582f6d730\",\"urls\":[\"bzzr://68e0a67e325879809cc725835d3a33b60b054ade116d19fd3097706ea36b77ac\"]},\"/home/zmg/Scratch/gz/GoalZappTruffle/contracts/Roles.sol\":{\"keccak256\":\"0x95cfda2f452c9b089fb7db48236b82fc949de4f94f82830906556bc7376ec822\",\"urls\":[\"bzzr://c904e0d4333e62b6db08c333f07b383f4804f8c474173d9e75da7b83e4fea33f\"]},\"/home/zmg/Scratch/gz/GoalZappTruffle/contracts/SafeMath.sol\":{\"keccak256\":\"0x4ccf2d7b51873db1ccfd54ca2adae5eac3b184f9699911ed4490438419f1c690\",\"urls\":[\"bzzr://1604f5b6d6e916c154efd8c6720cda069e5ba32dfa0a9dedf2b42e5b02d07f89\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106101e35760003560e01c8063769a8b9a11610102578063b166a09f11610095578063e4849b3211610064578063e4849b3214610bec578063eb024e7c14610c3f578063f2fde38b14610ca4578063fe173b9714610cf5576101e3565b8063b166a09f14610a5a578063bf1fe42014610ac3578063c5581db514610afe578063dd62ed3e14610b67576101e3565b8063a457c2d7116100d1578063a457c2d7146108df578063a6f2ae3a14610952578063a9059cbb14610974578063ad551cb7146109e7576101e3565b8063769a8b9a146107c55780638da5cb5b1461082e5780638f32d59b1461088557806396365d44146108b4576101e3565b8063395093511161017a57806365c3ad421161014957806365c3ad421461067b5780636e2904ec146106d657806370a0823114610749578063715018a6146107ae576101e3565b806339509351146104b457806349f9b0f71461052757806354fd4d501461059a5780635add51861461062a576101e3565b806318160ddd116101b657806318160ddd1461035857806323b872dd1461038357806329a00e7c146104165780632abef4fe14610489576101e3565b806303592e74146101ee57806303d6818514610249578063095ea7b3146102ae5780630c7d5cd814610321575b6101eb610d20565b50005b3480156101fa57600080fd5b506102476004803603604081101561021157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610efb565b005b34801561025557600080fd5b506102986004803603602081101561026c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f94565b6040518082815260200191505060405180910390f35b3480156102ba57600080fd5b50610307600480360360408110156102d157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610fac565b604051808215151515815260200191505060405180910390f35b34801561032d57600080fd5b50610336611355565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b34801561036457600080fd5b5061036d61136b565b6040518082815260200191505060405180910390f35b34801561038f57600080fd5b506103fc600480360360608110156103a657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611375565b604051808215151515815260200191505060405180910390f35b34801561042257600080fd5b506104736004803603608081101561043957600080fd5b810190808035906020019092919080359060200190929190803563ffffffff169060200190929190803590602001909291905050506117b8565b6040518082815260200191505060405180910390f35b34801561049557600080fd5b5061049e6118b4565b6040518082815260200191505060405180910390f35b3480156104c057600080fd5b5061050d600480360360408110156104d757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506118ba565b604051808215151515815260200191505060405180910390f35b34801561053357600080fd5b506105846004803603608081101561054a57600080fd5b810190808035906020019092919080359060200190929190803563ffffffff1690602001909291908035906020019092919050505061195f565b6040518082815260200191505060405180910390f35b3480156105a657600080fd5b506105af611a8f565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156105ef5780820151818401526020810190506105d4565b50505050905090810190601f16801561061c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561063657600080fd5b506106796004803603602081101561064d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b2d565b005b34801561068757600080fd5b506106d46004803603604081101561069e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611c25565b005b3480156106e257600080fd5b5061072f600480360360408110156106f957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611cbe565b604051808215151515815260200191505060405180910390f35b34801561075557600080fd5b506107986004803603602081101561076c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611dc0565b6040518082815260200191505060405180910390f35b3480156107ba57600080fd5b506107c3611e09565b005b3480156107d157600080fd5b50610814600480360360208110156107e857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611f42565b604051808215151515815260200191505060405180910390f35b34801561083a57600080fd5b50610843611f5f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561089157600080fd5b5061089a611f88565b604051808215151515815260200191505060405180910390f35b3480156108c057600080fd5b506108c9611fdf565b6040518082815260200191505060405180910390f35b3480156108eb57600080fd5b506109386004803603604081101561090257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611fe5565b604051808215151515815260200191505060405180910390f35b61095a610d20565b604051808215151515815260200191505060405180910390f35b34801561098057600080fd5b506109cd6004803603604081101561099757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061208a565b604051808215151515815260200191505060405180910390f35b3480156109f357600080fd5b50610a4060048036036040811015610a0a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612433565b604051808215151515815260200191505060405180910390f35b348015610a6657600080fd5b50610aa960048036036020811015610a7d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612535565b604051808215151515815260200191505060405180910390f35b348015610acf57600080fd5b50610afc60048036036020811015610ae657600080fd5b8101908080359060200190929190505050612552565b005b348015610b0a57600080fd5b50610b4d60048036036020811015610b2157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506125e3565b604051808215151515815260200191505060405180910390f35b348015610b7357600080fd5b50610bd660048036036040811015610b8a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612668565b6040518082815260200191505060405180910390f35b348015610bf857600080fd5b50610c2560048036036020811015610c0f57600080fd5b81019080803590602001909291905050506126ef565b604051808215151515815260200191505060405180910390f35b348015610c4b57600080fd5b50610c8e60048036036020811015610c6257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061295e565b6040518082815260200191505060405180910390f35b348015610cb057600080fd5b50610cf360048036036020811015610cc757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506129a7565b005b348015610d0157600080fd5b50610d0a612a2d565b6040518082815260200191505060405180910390f35b60007f03a63e2ece6348d85bde1e3ac40c8b4f1c6d029d2e06ecc6a60083ce06f8e648608f546040518082815260200191505060405180910390a1608f543a1115610db6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001806144916028913960400191505060405180910390fd5b60003411610dc357600080fd5b6000610de7608c54608d54608e60009054906101000a900463ffffffff16346117b8565b9050610dfe81608c54612a3390919063ffffffff16565b608c81905550610e5681608a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612a3390919063ffffffff16565b608a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610eae34608d54612a3390919063ffffffff16565b608d819055507fe7360c0fa1984a85874443100f5b25dd4f84192659660eb199f6c96e11defbcb8134604051808381526020018281526020019250505060405180910390a1600191505090565b610f4d81608860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612a3390919063ffffffff16565b608860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b60876020528060005260406000206000915090505481565b6000816000608760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054111561108f57608760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054811061108e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260d58152602001806142bf60d5913960e00191505060405180910390fd5b5b828481608860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411801561116a5750608960008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b1561133d577fee0e21a0909c175792d67fa4e7c4f99d844405993e69b1ac9985af378f4cda4b826040518082815260200191505060405180910390a17f8105dd0b792b0671c88d7a1212133cc32b4af324f6f817603da89c5f58f3101a608860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a17f696e0beeb15ed9ca67eaf74a16a22f657e91da45dd68458a392091645cc684c861128f608860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205484612abb90919063ffffffff16565b6040518082815260200191505060405180910390a1608860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482111561133c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260688152602001806143c16068913960800191505060405180910390fd5b5b611348338787612b44565b6001935050505092915050565b608e60009054906101000a900463ffffffff1681565b6000608c54905090565b6000816000608760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054111561145857608760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548110611457576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260d58152602001806142bf60d5913960e00191505060405180910390fd5b5b828481608860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541180156115335750608960008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b15611706577fee0e21a0909c175792d67fa4e7c4f99d844405993e69b1ac9985af378f4cda4b826040518082815260200191505060405180910390a17f8105dd0b792b0671c88d7a1212133cc32b4af324f6f817603da89c5f58f3101a608860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a17f696e0beeb15ed9ca67eaf74a16a22f657e91da45dd68458a392091645cc684c8611658608860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205484612abb90919063ffffffff16565b6040518082815260200191505060405180910390a1608860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115611705576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260688152602001806143c16068913960800191505060405180910390fd5b5b6117118787876130cd565b6117aa87336117a588608b60008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612abb90919063ffffffff16565b612b44565b600193505050509392505050565b600080851180156117c95750600084115b80156117db575060008363ffffffff16115b80156117f65750620f424063ffffffff168363ffffffff1611155b6117ff57600080fd5b600082141561181157600090506118ac565b620f424063ffffffff168363ffffffff1614156118545761184d8461183f848861378e90919063ffffffff16565b61381490919063ffffffff16565b90506118ac565b600080600061186c8786612a3390919063ffffffff16565b905061187d818888620f42406138a3565b809350819450505060008260ff1661189e858b61378e90919063ffffffff16565b901c90508881039450505050505b949350505050565b60865481565b6000611955338461195085608b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612a3390919063ffffffff16565b612b44565b6001905092915050565b600080851180156119705750600084115b8015611982575060008363ffffffff16115b801561199d5750620f424063ffffffff168363ffffffff1611155b80156119a95750848211155b6119b257600080fd5b60008214156119c45760009050611a87565b848214156119d457839050611a87565b620f424063ffffffff168363ffffffff161415611a1757611a1085611a02848761378e90919063ffffffff16565b61381490919063ffffffff16565b9050611a87565b60008060008488039050611a308882620f4240896138a3565b80935081945050506000611a4d848961378e90919063ffffffff16565b905060008360ff1689901b9050611a7f85611a718385612abb90919063ffffffff16565b61381490919063ffffffff16565b955050505050505b949350505050565b60828054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611b255780601f10611afa57610100808354040283529160200191611b25565b820191906000526020600020905b815481529060010190602001808311611b0857829003601f168201915b505050505081565b608360009054906101000a900460ff1615611bb0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f457363726f7720726f6c6520616c72656164792073657400000000000000000081525060200191505060405180910390fd5b611bc48160846138fb90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fcff6116c063f9dc68129fcb58fcfe99bbbaa33d9ad777e285d7f08bf174d715260405160405180910390a26001608360006101000a81548160ff02191690831515021790555050565b611c7781608860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612abb90919063ffffffff16565b608860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b6000611cd0611ccb6139d6565b611f42565b611d25576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602d815260200180614394602d913960400191505060405180910390fd5b611d7782608760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612abb90919063ffffffff16565b608760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555092915050565b6000608a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b611e11611f88565b611e83576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000611f588260856139de90919063ffffffff16565b9050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b608d5481565b6000612080338461207b85608b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612abb90919063ffffffff16565b612b44565b6001905092915050565b6000816000608760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054111561216d57608760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054811061216c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260d58152602001806142bf60d5913960e00191505060405180910390fd5b5b828481608860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541180156122485750608960008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b1561241b577fee0e21a0909c175792d67fa4e7c4f99d844405993e69b1ac9985af378f4cda4b826040518082815260200191505060405180910390a17f8105dd0b792b0671c88d7a1212133cc32b4af324f6f817603da89c5f58f3101a608860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a17f696e0beeb15ed9ca67eaf74a16a22f657e91da45dd68458a392091645cc684c861236d608860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205484612abb90919063ffffffff16565b6040518082815260200191505060405180910390a1608860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482111561241a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260688152602001806143c16068913960800191505060405180910390fd5b5b6124263387876130cd565b6001935050505092915050565b60006124456124406139d6565b612535565b61249a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603181526020018061428e6031913960400191505060405180910390fd5b6124ec82608760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612a3390919063ffffffff16565b608760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555092915050565b600061254b8260846139de90919063ffffffff16565b9050919050565b61255a611f88565b6125cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600081116125d957600080fd5b80608f8190555050565b600081608960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550919050565b6000608b60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60007f03a63e2ece6348d85bde1e3ac40c8b4f1c6d029d2e06ecc6a60083ce06f8e648608f546040518082815260200191505060405180910390a1608f543a1115612785576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001806144916028913960400191505060405180910390fd5b6000821180156127d4575081608a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410155b6127dd57600080fd5b6000612801608c54608d54608e60009054906101000a900463ffffffff168661195f565b90503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015612849573d6000803e3d6000fd5b5061285f81608d54612abb90919063ffffffff16565b608d819055506128b783608a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612abb90919063ffffffff16565b608a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061290f83608c54612abb90919063ffffffff16565b608c819055507f210405eb88ac7589aa9de0a6e36b9c9d3cd6e4061b74363d250a77afe3c6efb78382604051808381526020018281526020019250505060405180910390a16001915050919050565b6000608760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6129af611f88565b612a21576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b612a2a81613abc565b50565b608f5481565b600080828401905083811015612ab1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600082821115612b33576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b600082840390508091505092915050565b806000608760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541115612c2557608760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548110612c24576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260d58152602001806142bf60d5913960e00191505060405180910390fd5b5b818381608860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054118015612d005750608960008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b15612ed3577fee0e21a0909c175792d67fa4e7c4f99d844405993e69b1ac9985af378f4cda4b826040518082815260200191505060405180910390a17f8105dd0b792b0671c88d7a1212133cc32b4af324f6f817603da89c5f58f3101a608860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a17f696e0beeb15ed9ca67eaf74a16a22f657e91da45dd68458a392091645cc684c8612e25608860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205484612abb90919063ffffffff16565b6040518082815260200191505060405180910390a1608860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115612ed2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260688152602001806143c16068913960800191505060405180910390fd5b5b600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161415612f59576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806144b96024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161415612fdf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602281526020018061426c6022913960400191505060405180910390fd5b83608b60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925866040518082815260200191505060405180910390a3505050505050565b806000608760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411156131ae57608760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481106131ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260d58152602001806142bf60d5913960e00191505060405180910390fd5b5b818381608860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541180156132895750608960008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b1561345c577fee0e21a0909c175792d67fa4e7c4f99d844405993e69b1ac9985af378f4cda4b826040518082815260200191505060405180910390a17f8105dd0b792b0671c88d7a1212133cc32b4af324f6f817603da89c5f58f3101a608860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a17f696e0beeb15ed9ca67eaf74a16a22f657e91da45dd68458a392091645cc684c86133ae608860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205484612abb90919063ffffffff16565b6040518082815260200191505060405180910390a1608860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482111561345b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260688152602001806143c16068913960800191505060405180910390fd5b5b600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614156134e2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602581526020018061446c6025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161415613568576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806142236023913960400191505060405180910390fd5b60006135738761295e565b11156135f7576135828661295e565b84106135f6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f73656e6420616d6f756e74203e2070726f74656374656420746f6b656e73000081525060200191505060405180910390fd5b5b61364984608a60008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612abb90919063ffffffff16565b608a60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506136de84608a60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612a3390919063ffffffff16565b608a60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef866040518082815260200191505060405180910390a3505050505050565b6000808314156137a1576000905061380e565b60008284029050828482816137b257fe5b0414613809576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806144296021913960400191505060405180910390fd5b809150505b92915050565b600080821161388b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525060200191505060405180910390fd5b600082848161389657fe5b0490508091505092915050565b60008060008363ffffffff168563ffffffff166138c08989613c00565b02816138c857fe5b04905060006138d682613d4d565b90506138eb81607f0360ff1683901c82613e02565b8193509350505094509492505050565b61390582826139de565b15613978576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600033905090565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415613a65576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602281526020018061444a6022913960400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415613b42576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806142466026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60007001ffffffffffffffffffffffffffffffff831115613c1d57fe5b60008090506000836f80000000000000000000000000000000860281613c3f57fe5b0490507001000000000000000000000000000000008110613ca3576000613c7e6f800000000000000000000000000000008381613c7857fe5b046141a0565b90508060ff1682901c91506f800000000000000000000000000000008160ff16029250505b6f80000000000000000000000000000000811115613d29576000607f90505b60008160ff161115613d27576f8000000000000000000000000000000082830281613ce957fe5b0491507001000000000000000000000000000000008210613d1b57600182901c91506001810360ff166001901b830192505b80600190039050613cc2565b505b607a60ff166f02c5c85fdf473de6af278ece600fcbda8302901c9250505092915050565b600080602090506000607f90505b8060ff166001830160ff161015613daa576000600282840160ff1681613d7d57fe5b0490508460028260ff1660808110613d9157fe5b015410613da057809250613da4565b8091505b50613d5b565b8360028260ff1660808110613dbb57fe5b015410613dcc578092505050613dfd565b8360028360ff1660808110613ddd57fe5b015410613dee578192505050613dfd565b6000613df657fe5b6000925050505b919050565b60008083905060008090508360ff16858302901c91506f03442c4e6074a82f1797f72ac00000008202810190508360ff16858302901c91506f0116b96f757c380fb287fd0e400000008202810190508360ff16858302901c91506e45ae5bdd5f0e03eca1ff43900000008202810190508360ff16858302901c91506e0defabf91302cd95b9ffda500000008202810190508360ff16858302901c91506e02529ca9832b22439efff9b80000008202810190508360ff16858302901c91506d54f1cf12bd04e516b6da880000008202810190508360ff16858302901c91506d0a9e39e257a09ca2d6db510000008202810190508360ff16858302901c91506d012e066e7b839fa050c3090000008202810190508360ff16858302901c91506c1e33d7d926c329a1ad1a8000008202810190508360ff16858302901c91506c02bee513bdb4a6b19b5f8000008202810190508360ff16858302901c91506b3a9316fa79b88eccf2a000008202810190508360ff16858302901c91506b048177ebe1fa8123752000008202810190508360ff16858302901c91506a5263fe90242dcbacf000008202810190508360ff16858302901c91506a057e22099c030d941000008202810190508360ff16858302901c91506957e22099c030d94100008202810190508360ff16858302901c915069052b6b545699763100008202810190508360ff16858302901c9150684985f67696bf7480008202810190508360ff16858302901c91506803dea12ea99e4980008202810190508360ff16858302901c91506731880f2214b6e0008202810190508360ff16858302901c915067025bcff56eb360008202810190508360ff16858302901c9150661b722e10ab10008202810190508360ff16858302901c91506601317c700770008202810190508360ff16858302901c9150650cba84aafa008202810190508360ff16858302901c91506482573a0a008202810190508360ff16858302901c91506405035ad9008202810190508360ff16858302901c9150632f881b008202810190508360ff16858302901c91506301b293408202810190508360ff16858302901c9150620efc408202810190508360ff16858302901c9150617fe08202810190508360ff16858302901c91506104208202810190508360ff16858302901c915060218202810190508360ff16858302901c915060018202810190508360ff166001901b856f0688589cc0e9505e2f2fee5580000000838161419357fe5b0401019250505092915050565b6000806000905060008390506101008110156141d7575b60018111156141d257600181901c90506001820191506141b7565b614218565b6000608090505b60008160ff161115614216578060ff166001901b8210614207578060ff1682901c915080831792505b60018160ff16901c90506141de565b505b819250505091905056fe45524332303a207472616e7366657220746f20746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f2061646472657373457363726f7720526f6c653a2063616c6c657220646f6573206e6f7420686176652074686520457363726f7720726f6c65796f757220746f6b656e732061726520756e6465722070726f74656374696f6e20706572696f642c20636865636b2074696d65546f4c69667450726f74656374696f6e282920666f722074696d6520756e74696c20796f75206861766520746f6b656e7320617661696c61626c652c20616e642f6f7220636865636b20616d6f756e7450726f74656374656420746f2073656520686f77206d616e79206f6620796f757220746f6b656e73206172652063757272656e746c7920756e646572207468652070726f74656374696f6e20706572696f6441696f6e20526f6c653a2063616c6c657220646f6573206e6f742068617665207468652041696f6e20726f6c655472616e73666572206661696c65643a207265737472696374656420746f6b656e732065786365656473207472616e7366657220616d6f756e742e2054727920616761696e2c207573696e67206c657373207468616e20416d6f756e742052657374726963746564536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77526f6c65733a206163636f756e7420697320746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737373656e742067617320686967686572207468616e2068617264636f6465642067617320707269636545524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373a165627a7a72305820947cab7d5971e2ac865d8f7a7b2539b5f57345e0c206386d60450fe5120e75890029",
  "sourceMap": "242:3080:3:-;;;380:29:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;541::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1270:17:3;1244:43;;1308:2:6;667:10:17;658:6;;:19;;;;;;;;;;;;;;;;;;725:6;;;;;;;;;;;692:40;;721:1;692:40;;;;;;;;;;;;3565:36:18;3546:11;3559:2;3546:16;;;;;;;;:55;;;;3626:36;3607:11;3620:2;3607:16;;;;;;;;:55;;;;3687:36;3668:11;3681:2;3668:16;;;;;;;;:55;;;;3748:36;3729:11;3742:2;3729:16;;;;;;;;:55;;;;3809:36;3790:11;3803:2;3790:16;;;;;;;;:55;;;;3870:36;3851:11;3864:2;3851:16;;;;;;;;:55;;;;3931:36;3912:11;3925:2;3912:16;;;;;;;;:55;;;;3992:36;3973:11;3986:2;3973:16;;;;;;;;:55;;;;4053:36;4034:11;4047:2;4034:16;;;;;;;;:55;;;;4114:36;4095:11;4108:2;4095:16;;;;;;;;:55;;;;4175:36;4156:11;4169:2;4156:16;;;;;;;;:55;;;;4236:36;4217:11;4230:2;4217:16;;;;;;;;:55;;;;4297:36;4278:11;4291:2;4278:16;;;;;;;;:55;;;;4358:36;4339:11;4352:2;4339:16;;;;;;;;:55;;;;4419:36;4400:11;4413:2;4400:16;;;;;;;;:55;;;;4480:36;4461:11;4474:2;4461:16;;;;;;;;:55;;;;4541:36;4522:11;4535:2;4522:16;;;;;;;;:55;;;;4602:36;4583:11;4596:2;4583:16;;;;;;;;:55;;;;4663:36;4644:11;4657:2;4644:16;;;;;;;;:55;;;;4724:36;4705:11;4718:2;4705:16;;;;;;;;:55;;;;4785:36;4766:11;4779:2;4766:16;;;;;;;;:55;;;;4846:36;4827:11;4840:2;4827:16;;;;;;;;:55;;;;4907:36;4888:11;4901:2;4888:16;;;;;;;;:55;;;;4968:36;4949:11;4962:2;4949:16;;;;;;;;:55;;;;5029:36;5010:11;5023:2;5010:16;;;;;;;;:55;;;;5090:36;5071:11;5084:2;5071:16;;;;;;;;:55;;;;5151:36;5132:11;5145:2;5132:16;;;;;;;;:55;;;;5212:36;5193:11;5206:2;5193:16;;;;;;;;:55;;;;5273:36;5254:11;5267:2;5254:16;;;;;;;;:55;;;;5334:36;5315:11;5328:2;5315:16;;;;;;;;:55;;;;5395:36;5376:11;5389:2;5376:16;;;;;;;;:55;;;;5456:36;5437:11;5450:2;5437:16;;;;;;;;:55;;;;5517:36;5498:11;5511:2;5498:16;;;;;;;;:55;;;;5578:36;5559:11;5572:2;5559:16;;;;;;;;:55;;;;5639:36;5620:11;5633:2;5620:16;;;;;;;;:55;;;;5700:36;5681:11;5694:2;5681:16;;;;;;;;:55;;;;5761:36;5742:11;5755:2;5742:16;;;;;;;;:55;;;;5822:36;5803:11;5816:2;5803:16;;;;;;;;:55;;;;5883:36;5864:11;5877:2;5864:16;;;;;;;;:55;;;;5944:36;5925:11;5938:2;5925:16;;;;;;;;:55;;;;6005:36;5986:11;5999:2;5986:16;;;;;;;;:55;;;;6066:36;6047:11;6060:2;6047:16;;;;;;;;:55;;;;6127:36;6108:11;6121:2;6108:16;;;;;;;;:55;;;;6188:36;6169:11;6182:2;6169:16;;;;;;;;:55;;;;6249:36;6230:11;6243:2;6230:16;;;;;;;;:55;;;;6310:36;6291:11;6304:2;6291:16;;;;;;;;:55;;;;6371:36;6352:11;6365:2;6352:16;;;;;;;;:55;;;;6432:36;6413:11;6426:2;6413:16;;;;;;;;:55;;;;6493:36;6474:11;6487:2;6474:16;;;;;;;;:55;;;;6554:36;6535:11;6548:2;6535:16;;;;;;;;:55;;;;6615:36;6596:11;6609:2;6596:16;;;;;;;;:55;;;;6676:36;6657:11;6670:2;6657:16;;;;;;;;:55;;;;6737:36;6718:11;6731:2;6718:16;;;;;;;;:55;;;;6798:36;6779:11;6792:2;6779:16;;;;;;;;:55;;;;6859:36;6840:11;6853:2;6840:16;;;;;;;;:55;;;;6920:36;6901:11;6914:2;6901:16;;;;;;;;:55;;;;6981:36;6962:11;6975:2;6962:16;;;;;;;;:55;;;;7042:36;7023:11;7036:2;7023:16;;;;;;;;:55;;;;7103:36;7084:11;7097:2;7084:16;;;;;;;;:55;;;;7164:36;7145:11;7158:2;7145:16;;;;;;;;:55;;;;7225:36;7206:11;7219:2;7206:16;;;;;;;;:55;;;;7286:36;7267:11;7280:2;7267:16;;;;;;;;:55;;;;7347:36;7328:11;7341:2;7328:16;;;;;;;;:55;;;;7408:36;7389:11;7402:2;7389:16;;;;;;;;:55;;;;7469:36;7450:11;7463:2;7450:16;;;;;;;;:55;;;;7530:36;7511:11;7524:2;7511:16;;;;;;;;:55;;;;7591:36;7572:11;7585:2;7572:16;;;;;;;;:55;;;;7652:36;7633:11;7646:2;7633:16;;;;;;;;:55;;;;7713:36;7694:11;7706:3;7694:16;;;;;;;;:55;;;;7774:36;7755:11;7767:3;7755:16;;;;;;;;:55;;;;7835:36;7816:11;7828:3;7816:16;;;;;;;;:55;;;;7896:36;7877:11;7889:3;7877:16;;;;;;;;:55;;;;7957:36;7938:11;7950:3;7938:16;;;;;;;;:55;;;;8018:36;7999:11;8011:3;7999:16;;;;;;;;:55;;;;8079:36;8060:11;8072:3;8060:16;;;;;;;;:55;;;;8140:36;8121:11;8133:3;8121:16;;;;;;;;:55;;;;8201:36;8182:11;8194:3;8182:16;;;;;;;;:55;;;;8262:36;8243:11;8255:3;8243:16;;;;;;;;:55;;;;8323:36;8304:11;8316:3;8304:16;;;;;;;;:55;;;;8384:36;8365:11;8377:3;8365:16;;;;;;;;:55;;;;8445:36;8426:11;8438:3;8426:16;;;;;;;;:55;;;;8506:36;8487:11;8499:3;8487:16;;;;;;;;:55;;;;8567:36;8548:11;8560:3;8548:16;;;;;;;;:55;;;;8628:36;8609:11;8621:3;8609:16;;;;;;;;:55;;;;8689:36;8670:11;8682:3;8670:16;;;;;;;;:55;;;;8750:36;8731:11;8743:3;8731:16;;;;;;;;:55;;;;8811:36;8792:11;8804:3;8792:16;;;;;;;;:55;;;;8872:36;8853:11;8865:3;8853:16;;;;;;;;:55;;;;8933:36;8914:11;8926:3;8914:16;;;;;;;;:55;;;;8994:36;8975:11;8987:3;8975:16;;;;;;;;:55;;;;9055:36;9036:11;9048:3;9036:16;;;;;;;;:55;;;;9116:36;9097:11;9109:3;9097:16;;;;;;;;:55;;;;9177:36;9158:11;9170:3;9158:16;;;;;;;;:55;;;;9238:36;9219:11;9231:3;9219:16;;;;;;;;:55;;;;9299:36;9280:11;9292:3;9280:16;;;;;;;;:55;;;;9360:36;9341:11;9353:3;9341:16;;;;;;;;:55;;;;267:17:1;:15;;;:17;;:::i;:::-;608::19;589:16;:36;;;;532:100;242:3080:3;;562:188:1;608:60;625:42;608:12;:16;;;;;;:60;;;;:::i;:::-;700:42;683:60;;;;;;;;;;;;562:188::o;260:175:24:-;337:18;341:4;347:7;337:3;;;:18;;:::i;:::-;336:19;328:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;424:4;401;:11;;:20;413:7;401:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;260:175;;:::o;779:200::-;851:4;894:1;875:21;;:7;:21;;;;867:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;952:4;:11;;:20;964:7;952:20;;;;;;;;;;;;;;;;;;;;;;;;;945:27;;779:200;;;;:::o;242:3080:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "242:3080:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1427:5;:3;:5::i;:::-;;242:3080;1007:186:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1007:186:23;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1007:186:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;218:51:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;218:51:19;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;218:51:19;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2707:212:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2707:212:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2707:212:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;880:26:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;880:26:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1695:89:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1695:89:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3376:324;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3376:324:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3376:324:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1235:831:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1235:831:2;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;1235:831:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;182:31:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;182:31:19;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4095:203:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4095:203:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4095:203:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2676:1003:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2676:1003:2;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;2676:1003:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;541:29;;8:9:-1;5:2;;;30:1;27;20:12;5:2;541:29:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;541:29:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;592:155:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;592:155:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;592:155:8;;;;;;;;;;;;;;;;;;;:::i;:::-;;1197:173:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1197:173:23;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1197:173:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1555:203:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1555:203:19;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1555:203:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1843:108:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1843:108:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1843:108:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1600:137:17;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1600:137:17;;;:::i;:::-;;440:116:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;440:116:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;440:116:1;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;815:77:17;;8:9:-1;5:2;;;30:1;27;20:12;5:2;815:77:17;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1166:90;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1166:90:17;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;401:26:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;401:26:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4785:213:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4785:213:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4785:213:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1560:421:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2154:225:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2154:225:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2154:225:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1348:201:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1348:201:19;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1348:201:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;480:106:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;480:106:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;480:106:8;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2994:116:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2994:116:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2994:116:3;;;;;;;;;;;;;;;;;:::i;:::-;;862:141:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;862:141:23;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;862:141:23;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2437:132:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2437:132:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2437:132:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2157:500:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2157:500:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2157:500:3;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1764:119:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1764:119:19;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1764:119:19;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1886:107:17;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1886:107:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1886:107:17;;;;;;;;;;;;;;;;;;;:::i;:::-;;1244:43:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1244:43:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1560:421;1612:4;2764:18;2773:8;;2764:18;;;;;;;;;;;;;;;;;;2811:8;;2796:11;:23;;2788:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1644:1;1632:9;:13;1624:22;;;;;;1652:20;1675:75;1699:12;;1713:11;;1726:12;;;;;;;;;;;1740:9;1675:23;:75::i;:::-;1652:98;;1771:30;1788:12;1771;;:16;;:30;;;;:::i;:::-;1756:12;:45;;;;1831:39;1857:12;1831:9;:21;1841:10;1831:21;;;;;;;;;;;;;;;;:25;;:39;;;;:::i;:::-;1807:9;:21;1817:10;1807:21;;;;;;;;;;;;;;;:63;;;;1890:26;1906:9;1890:11;;:15;;:26;;;;:::i;:::-;1876:11;:40;;;;1927:32;1935:12;1949:9;1927:32;;;;;;;;;;;;;;;;;;;;;;;;1972:4;1965:11;;;1560:421;:::o;1007:186:23:-;1138:50;1180:7;1138:16;:37;1155:19;1138:37;;;;;;;;;;;;;;;;:41;;:50;;;;:::i;:::-;1098:16;:37;1115:19;1098:37;;;;;;;;;;;;;;;:90;;;;1007:186;;:::o;218:51:19:-;;;;;;;;;;;;;;;;;:::o;2707:212:6:-;2839:4;2778:5;868:1:19;838:15;:27;854:10;838:27;;;;;;;;;;;;;;;;:31;834:489;;;971:15;:27;987:10;971:27;;;;;;;;;;;;;;;;962:6;:36;953:264;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;834:489;2807:5:6;2814:7;465:6:23;434:16;:28;451:10;434:28;;;;;;;;;;;;;;;;:37;:83;;;;;488:18;:29;507:9;488:29;;;;;;;;;;;;;;;;;;;;;;;;;475:42;;:9;:42;;;;434:83;430:417;;;532:14;539:6;532:14;;;;;;;;;;;;;;;;;;559:46;576:16;:28;593:10;576:28;;;;;;;;;;;;;;;;559:46;;;;;;;;;;;;;;;;;;618:59;636:40;647:16;:28;664:10;647:28;;;;;;;;;;;;;;;;636:6;:10;;:40;;;;:::i;:::-;618:59;;;;;;;;;;;;;;;;;;703:16;:28;720:10;703:28;;;;;;;;;;;;;;;;693:6;:38;;685:155;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;430:417;2855:36:6;2864:10;2876:7;2885:5;2855:8;:36::i;:::-;2908:4;2901:11;;1330:1:19;;2707:212:6;;;;;:::o;880:26:3:-;;;;;;;;;;;;;:::o;1695:89:6:-;1739:7;1765:12;;1758:19;;1695:89;:::o;3376:324::-;3537:4;3478:6;868:1:19;838:15;:27;854:10;838:27;;;;;;;;;;;;;;;;:31;834:489;;;971:15;:27;987:10;971:27;;;;;;;;;;;;;;;;962:6;:36;953:264;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;834:489;3508:6:6;3516:9;465:6:23;434:16;:28;451:10;434:28;;;;;;;;;;;;;;;;:37;:83;;;;;488:18;:29;507:9;488:29;;;;;;;;;;;;;;;;;;;;;;;;;475:42;;:9;:42;;;;434:83;430:417;;;532:14;539:6;532:14;;;;;;;;;;;;;;;;;;559:46;576:16;:28;593:10;576:28;;;;;;;;;;;;;;;;559:46;;;;;;;;;;;;;;;;;;618:59;636:40;647:16;:28;664:10;647:28;;;;;;;;;;;;;;;;636:6;:10;;:40;;;;:::i;:::-;618:59;;;;;;;;;;;;;;;;;;703:16;:28;720:10;703:28;;;;;;;;;;;;;;;;693:6;:38;;685:155;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;430:417;3553:36:6;3563:6;3571:9;3582:6;3553:9;:36::i;:::-;3599:73;3608:6;3616:10;3628:43;3664:6;3628:11;:19;3640:6;3628:19;;;;;;;;;;;;;;;:31;3648:10;3628:31;;;;;;;;;;;;;;;;:35;;:43;;;;:::i;:::-;3599:8;:73::i;:::-;3689:4;3682:11;;1330:1:19;;3376:324:6;;;;;;:::o;1235:831:2:-;1399:7;1456:1;1446:7;:11;:36;;;;;1481:1;1461:17;:21;1446:36;:60;;;;;1505:1;1486:16;:20;;;1446:60;:94;;;;;611:7;1510:30;;:16;:30;;;;1446:94;1438:103;;;;;;1611:1;1593:14;:19;1589:48;;;1629:1;1622:8;;;;1589:48;611:7;1688:30;;:16;:30;;;1684:108;;;1735:50;1767:17;1735:27;1747:14;1735:7;:11;;:27;;;;:::i;:::-;:31;;:50;;;;:::i;:::-;1728:57;;;;1684:108;1798:14;1818:15;1839:13;1855:37;1874:17;1855:14;:18;;:37;;;;:::i;:::-;1839:53;;1920:61;1926:5;1933:17;1952:16;611:7;1920:5;:61::i;:::-;1898:83;;;;;;;;1987:12;2025:9;2002:32;;:19;2014:6;2002:7;:11;;:19;;;;:::i;:::-;:32;;1987:47;;2054:7;2047:4;:14;2040:21;;;;;;1235:831;;;;;;;:::o;182:31:19:-;;;;:::o;4095:203:6:-;4175:4;4191:79;4200:10;4212:7;4221:48;4258:10;4221:11;:23;4233:10;4221:23;;;;;;;;;;;;;;;:32;4245:7;4221:32;;;;;;;;;;;;;;;;:36;;:48;;;;:::i;:::-;4191:8;:79::i;:::-;4287:4;4280:11;;4095:203;;;;:::o;2676:1003:2:-;2816:7;2871:1;2861:7;:11;:36;;;;;2896:1;2876:17;:21;2861:36;:60;;;;;2920:1;2901:16;:20;;;2861:60;:94;;;;;611:7;2925:30;;:16;:30;;;;2861:94;:120;;;;;2974:7;2959:11;:22;;2861:120;2853:129;;;;;;3046:1;3031:11;:16;3027:45;;;3064:1;3057:8;;;;3027:45;3147:7;3132:11;:22;3128:67;;;3171:17;3164:24;;;;3128:67;611:7;3246:30;;:16;:30;;;3242:105;;;3293:47;3332:7;3293:34;3315:11;3293:17;:21;;:34;;;;:::i;:::-;:38;;:47;;;;:::i;:::-;3286:54;;;;3242:105;3353:14;3373:15;3394:13;3420:11;3410:7;:21;3394:37;;3459:51;3465:7;3474:5;611:7;3493:16;3459:5;:51::i;:::-;3437:73;;;;;;;;3516:18;3537:29;3559:6;3537:17;:21;;:29;;;;:::i;:::-;3516:50;;3572:18;3614:9;3593:30;;:17;:30;;3572:51;;3636:38;3667:6;3636:26;3651:10;3636;:14;;:26;;;;:::i;:::-;:30;;:38;;;;:::i;:::-;3629:45;;;;;;;2676:1003;;;;;;;:::o;541:29::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;592:155:8:-;425:5;;;;;;;;;;;424:6;416:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;659:20;671:7;659;:11;;:20;;;;:::i;:::-;710:7;694:24;;;;;;;;;;;;736:4;728:5;;:12;;;;;;;;;;;;;;;;;;592:155;:::o;1197:173:23:-;1319:46;1357:7;1319:16;:33;1336:15;1319:33;;;;;;;;;;;;;;;;:37;;:46;;;;:::i;:::-;1283:16;:33;1300:15;1283:33;;;;;;;;;;;;;;;:82;;;;1197:173;;:::o;1555:203:19:-;1650:4;339:27:1;353:12;:10;:12::i;:::-;339:13;:27::i;:::-;331:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1692:38:19;1722:7;1692:15;:25;1708:8;1692:25;;;;;;;;;;;;;;;;:29;;:38;;;;:::i;:::-;1664:15;:25;1680:8;1664:25;;;;;;;;;;;;;;;:66;;;;1555:203;;;;:::o;1843:108:6:-;1900:7;1926:9;:18;1936:7;1926:18;;;;;;;;;;;;;;;;1919:25;;1843:108;;;:::o;1600:137:17:-;1019:9;:7;:9::i;:::-;1011:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1698:1;1661:40;;1682:6;;;;;;;;;;;1661:40;;;;;;;;;;;;1728:1;1711:6;;:19;;;;;;;;;;;;;;;;;;1600:137::o;440:116:1:-;501:4;524:25;541:7;524:12;:16;;:25;;;;:::i;:::-;517:32;;440:116;;;:::o;815:77:17:-;853:7;879:6;;;;;;;;;;;872:13;;815:77;:::o;1166:90::-;1206:4;1243:6;;;;;;;;;;;1229:20;;:10;:20;;;1222:27;;1166:90;:::o;401:26:3:-;;;;:::o;4785:213:6:-;4870:4;4886:84;4895:10;4907:7;4916:53;4953:15;4916:11;:23;4928:10;4916:23;;;;;;;;;;;;;;;:32;4940:7;4916:32;;;;;;;;;;;;;;;;:36;;:53;;;;:::i;:::-;4886:8;:84::i;:::-;4987:4;4980:11;;4785:213;;;;:::o;2154:225::-;2295:4;2236:6;868:1:19;838:15;:27;854:10;838:27;;;;;;;;;;;;;;;;:31;834:489;;;971:15;:27;987:10;971:27;;;;;;;;;;;;;;;;962:6;:36;953:264;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;834:489;2266:6:6;2274:9;465:6:23;434:16;:28;451:10;434:28;;;;;;;;;;;;;;;;:37;:83;;;;;488:18;:29;507:9;488:29;;;;;;;;;;;;;;;;;;;;;;;;;475:42;;:9;:42;;;;434:83;430:417;;;532:14;539:6;532:14;;;;;;;;;;;;;;;;;;559:46;576:16;:28;593:10;576:28;;;;;;;;;;;;;;;;559:46;;;;;;;;;;;;;;;;;;618:59;636:40;647:16;:28;664:10;647:28;;;;;;;;;;;;;;;;636:6;:10;;:40;;;;:::i;:::-;618:59;;;;;;;;;;;;;;;;;;703:16;:28;720:10;703:28;;;;;;;;;;;;;;;;693:6;:38;;685:155;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;430:417;2311:40:6;2321:10;2333:9;2344:6;2311:9;:40::i;:::-;2368:4;2361:11;;1330:1:19;;2154:225:6;;;;;:::o;1348:201:19:-;1441:4;287:22:8;296:12;:10;:12::i;:::-;287:8;:22::i;:::-;279:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1483:38:19;1513:7;1483:15;:25;1499:8;1483:25;;;;;;;;;;;;;;;;:29;;:38;;;;:::i;:::-;1455:15;:25;1471:8;1455:25;;;;;;;;;;;;;;;:66;;;;1348:201;;;;:::o;480:106:8:-;536:4;559:20;571:7;559;:11;;:20;;;;:::i;:::-;552:27;;480:106;;;:::o;2994:116:3:-;1019:9:17;:7;:9::i;:::-;1011:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3077:1:3;3065:9;:13;3057:22;;;;;;3096:9;3085:8;:20;;;;2994:116;:::o;862:141:23:-;935:4;984:14;947:18;:34;966:14;947:34;;;;;;;;;;;;;;;;:51;;;;;;;;;;;;;;;;;;862:141;;;:::o;2437:132:6:-;2509:7;2535:11;:18;2547:5;2535:18;;;;;;;;;;;;;;;:27;2554:7;2535:27;;;;;;;;;;;;;;;;2528:34;;2437:132;;;;:::o;2157:500:3:-;2220:4;2764:18;2773:8;;2764:18;;;;;;;;;;;;;;;;;;2811:8;;2796:11;:23;;2788:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2253:1;2240:10;:14;:53;;;;;2283:10;2258:9;:21;2268:10;2258:21;;;;;;;;;;;;;;;;:35;;2240:53;2232:62;;;;;;2300:17;2320:72;2340:12;;2354:11;;2367:12;;;;;;;;;;;2381:10;2320:19;:72::i;:::-;2300:92;;2398:10;:19;;:30;2418:9;2398:30;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2398:30:3;2448:26;2464:9;2448:11;;:15;;:26;;;;:::i;:::-;2434:11;:40;;;;2504:37;2530:10;2504:9;:21;2514:10;2504:21;;;;;;;;;;;;;;;;:25;;:37;;;;:::i;:::-;2480:9;:21;2490:10;2480:21;;;;;;;;;;;;;;;:61;;;;2562:28;2579:10;2562:12;;:16;;:28;;;;:::i;:::-;2547:12;:43;;;;2601:34;2613:10;2625:9;2601:34;;;;;;;;;;;;;;;;;;;;;;;;2648:4;2641:11;;;2157:500;;;:::o;1764:119:19:-;1829:7;1852:15;:25;1868:8;1852:25;;;;;;;;;;;;;;;;1845:32;;1764:119;;;:::o;1886:107:17:-;1019:9;:7;:9::i;:::-;1011:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1958:28;1977:8;1958:18;:28::i;:::-;1886:107;:::o;1244:43:3:-;;;;:::o;834:176:25:-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;1274:179::-;1332:7;1364:1;1359;:6;;1351:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1410:9;1426:1;1422;:5;1410:17;;1445:1;1438:8;;;1274:179;;;;:::o;7750:396:6:-;7836:5;868:1:19;838:15;:27;854:10;838:27;;;;;;;;;;;;;;;;:31;834:489;;;971:15;:27;987:10;971:27;;;;;;;;;;;;;;;;962:6;:36;953:264;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;834:489;7866:5:6;7873:7;465:6:23;434:16;:28;451:10;434:28;;;;;;;;;;;;;;;;:37;:83;;;;;488:18;:29;507:9;488:29;;;;;;;;;;;;;;;;;;;;;;;;;475:42;;:9;:42;;;;434:83;430:417;;;532:14;539:6;532:14;;;;;;;;;;;;;;;;;;559:46;576:16;:28;593:10;576:28;;;;;;;;;;;;;;;;559:46;;;;;;;;;;;;;;;;;;618:59;636:40;647:16;:28;664:10;647:28;;;;;;;;;;;;;;;;636:6;:10;;:40;;;;:::i;:::-;618:59;;;;;;;;;;;;;;;;;;703:16;:28;720:10;703:28;;;;;;;;;;;;;;;;693:6;:38;;685:155;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;430:417;7926:1:6;7909:19;;:5;:19;;;;7901:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8006:1;7987:21;;:7;:21;;;;7979:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8088:5;8058:11;:18;8070:5;8058:18;;;;;;;;;;;;;;;:27;8077:7;8058:27;;;;;;;;;;;;;;;:35;;;;8124:7;8108:31;;8117:5;8108:31;;;8133:5;8108:31;;;;;;;;;;;;;;;;;;1330:1:19;;7750:396:6;;;;:::o;5472:610::-;5573:6;868:1:19;838:15;:27;854:10;838:27;;;;;;;;;;;;;;;;:31;834:489;;;971:15;:27;987:10;971:27;;;;;;;;;;;;;;;;962:6;:36;953:264;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;834:489;5603:6:6;5611:9;465:6:23;434:16;:28;451:10;434:28;;;;;;;;;;;;;;;;:37;:83;;;;;488:18;:29;507:9;488:29;;;;;;;;;;;;;;;;;;;;;;;;;475:42;;:9;:42;;;;434:83;430:417;;;532:14;539:6;532:14;;;;;;;;;;;;;;;;;;559:46;576:16;:28;593:10;576:28;;;;;;;;;;;;;;;;559:46;;;;;;;;;;;;;;;;;;618:59;636:40;647:16;:28;664:10;647:28;;;;;;;;;;;;;;;;636:6;:10;;:40;;;;:::i;:::-;618:59;;;;;;;;;;;;;;;;;;703:16;:28;720:10;703:28;;;;;;;;;;;;;;;;693:6;:38;;685:155;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;430:417;5658:1:6;5640:20;;:6;:20;;;;5632:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5741:1;5720:23;;:9;:23;;;;5712:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5816:1;5790:23;5806:6;5790:15;:23::i;:::-;:27;5786:116;;;5839:23;5855:6;5839:15;:23::i;:::-;5830:6;:32;5822:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5786:116;5931:29;5953:6;5931:9;:17;5941:6;5931:17;;;;;;;;;;;;;;;;:21;;:29;;;;:::i;:::-;5911:9;:17;5921:6;5911:17;;;;;;;;;;;;;;;:49;;;;5993:32;6018:6;5993:9;:20;6003:9;5993:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;5970:9;:20;5980:9;5970:20;;;;;;;;;;;;;;;:55;;;;6057:9;6040:35;;6049:6;6040:35;;;6068:6;6040:35;;;;;;;;;;;;;;;;;;1330:1:19;;5472:610:6;;;;:::o;1693:458:25:-;1751:7;1996:1;1991;:6;1987:45;;;2020:1;2013:8;;;;1987:45;2042:9;2058:1;2054;:5;2042:17;;2086:1;2081;2077;:5;;;;;;:10;2069:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2143:1;2136:8;;;1693:458;;;;;:::o;2606:326::-;2664:7;2761:1;2757;:5;2749:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2803:9;2819:1;2815;:5;;;;;;2803:17;;2924:1;2917:8;;;2606:326;;;;:::o;10610:341:18:-;10708:7;10717:5;10730:22;10784:5;10755:34;;10776:5;10755:26;;:18;10758:6;10766;10755:2;:18::i;:::-;:26;:34;;;;;;10730:59;;10795:15;10813:41;10839:14;10813:25;:41::i;:::-;10795:59;;10868:66;10912:9;582:3;10896:25;10877:45;;:14;:45;;10924:9;10868:8;:66::i;:::-;10936:9;10860:86;;;;;;10610:341;;;;;;;:::o;260:175:24:-;337:18;341:4;347:7;337:3;:18::i;:::-;336:19;328:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;424:4;401;:11;;:20;413:7;401:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;260:175;;:::o;788:96:5:-;833:15;867:10;860:17;;788:96;:::o;779:200:24:-;851:4;894:1;875:21;;:7;:21;;;;867:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;952:4;:11;;:20;964:7;952:20;;;;;;;;;;;;;;;;;;;;;;;;;945:27;;779:200;;;;:::o;2094:225:17:-;2187:1;2167:22;;:8;:22;;;;2159:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2276:8;2247:38;;2268:6;;;;;;;;;;;2247:38;;;;;;;;;;;;2304:8;2295:6;;:17;;;;;;;;;;;;;;;;;;2094:225;:::o;11440:804:18:-;11517:7;957:35;11539:10;:21;;11532:29;;;;11568:11;11582:1;11568:15;;11589:9;11624:12;809:35;11601:10;:20;:35;;;;;;11589:47;;883:35;11734:1;:12;11730:130;;11756:11;11770:22;809:35;11780:1;:11;;;;;;11770:9;:22::i;:::-;11756:36;;11806:5;11800:11;;;;;;;809:35;11838:5;:15;;;11832:21;;11730:130;;809:35;11957:1;:11;11953:237;;;11983:7;582:3;11983:23;;11978:206;12012:1;12008;:5;;;11978:206;;;809:35;12039:1;12035;:5;12034:17;;;;;;12030:21;;883:35;12082:1;:12;12078:98;;12114:1;12108:7;;;;;12163:1;12159;:5;12151:14;;445:1;12151:14;;12144:21;;;;12078:98;12015:3;;;;;;11978:206;;;;11953:237;1298:3;12203:36;;1221:33;12204:3;:18;12203:36;;12196:43;;;;11440:804;;;;:::o;13118:424::-;13188:5;13201:8;537:2;13201:24;;13231:8;582:3;13231:24;;13262:141;13278:2;13269:11;;13274:1;13269:2;:6;:11;;;13262:141;;;13290:9;13314:1;13308:2;13303;:7;13302:13;;;;;;;;13290:25;;13347:2;13327:11;13339:3;13327:16;;;;;;;;;;;:22;13323:73;;13364:3;13359:8;;13323:73;;;13393:3;13388:8;;13323:73;13262:141;;;;13432:2;13413:11;13425:2;13413:15;;;;;;;;;;;:21;13409:44;;13451:2;13444:9;;;;;;13409:44;13482:2;13463:11;13475:2;13463:15;;;;;;;;;;;:21;13459:44;;13501:2;13494:9;;;;;;13459:44;13517:5;13510:13;;;;13536:1;13529:8;;;;13118:424;;;;:::o;14082:3826::-;14153:7;14168:10;14181:2;14168:15;;14189:11;14203:1;14189:15;;14229:10;14216:23;;14222:2;14217;:7;14216:23;;14211:28;;14257:34;14252:2;:39;14245:46;;;;14339:10;14326:23;;14332:2;14327;:7;14326:23;;14321:28;;14367:34;14362:2;:39;14355:46;;;;14449:10;14436:23;;14442:2;14437;:7;14436:23;;14431:28;;14477:34;14472:2;:39;14465:46;;;;14559:10;14546:23;;14552:2;14547;:7;14546:23;;14541:28;;14587:34;14582:2;:39;14575:46;;;;14669:10;14656:23;;14662:2;14657;:7;14656:23;;14651:28;;14697:34;14692:2;:39;14685:46;;;;14779:10;14766:23;;14772:2;14767;:7;14766:23;;14761:28;;14807:34;14802:2;:39;14795:46;;;;14889:10;14876:23;;14882:2;14877;:7;14876:23;;14871:28;;14917:34;14912:2;:39;14905:46;;;;14999:10;14986:23;;14992:2;14987;:7;14986:23;;14981:28;;15027:34;15022:2;:39;15015:46;;;;15109:10;15096:23;;15102:2;15097;:7;15096:23;;15091:28;;15137:34;15132:2;:39;15125:46;;;;15221:10;15208:23;;15214:2;15209;:7;15208:23;;15203:28;;15249:34;15244:2;:39;15237:46;;;;15333:10;15320:23;;15326:2;15321;:7;15320:23;;15315:28;;15361:34;15356:2;:39;15349:46;;;;15445:10;15432:23;;15438:2;15433;:7;15432:23;;15427:28;;15473:34;15468:2;:39;15461:46;;;;15557:10;15544:23;;15550:2;15545;:7;15544:23;;15539:28;;15585:34;15580:2;:39;15573:46;;;;15669:10;15656:23;;15662:2;15657;:7;15656:23;;15651:28;;15697:34;15692:2;:39;15685:46;;;;15781:10;15768:23;;15774:2;15769;:7;15768:23;;15763:28;;15809:34;15804:2;:39;15797:46;;;;15893:10;15880:23;;15886:2;15881;:7;15880:23;;15875:28;;15921:34;15916:2;:39;15909:46;;;;16005:10;15992:23;;15998:2;15993;:7;15992:23;;15987:28;;16033:34;16028:2;:39;16021:46;;;;16117:10;16104:23;;16110:2;16105;:7;16104:23;;16099:28;;16145:34;16140:2;:39;16133:46;;;;16229:10;16216:23;;16222:2;16217;:7;16216:23;;16211:28;;16257:34;16252:2;:39;16245:46;;;;16341:10;16328:23;;16334:2;16329;:7;16328:23;;16323:28;;16369:34;16364:2;:39;16357:46;;;;16453:10;16440:23;;16446:2;16441;:7;16440:23;;16435:28;;16481:34;16476:2;:39;16469:46;;;;16565:10;16552:23;;16558:2;16553;:7;16552:23;;16547:28;;16593:34;16588:2;:39;16581:46;;;;16677:10;16664:23;;16670:2;16665;:7;16664:23;;16659:28;;16705:34;16700:2;:39;16693:46;;;;16789:10;16776:23;;16782:2;16777;:7;16776:23;;16771:28;;16817:34;16812:2;:39;16805:46;;;;16901:10;16888:23;;16894:2;16889;:7;16888:23;;16883:28;;16929:34;16924:2;:39;16917:46;;;;17013:10;17000:23;;17006:2;17001;:7;17000:23;;16995:28;;17041:34;17036:2;:39;17029:46;;;;17125:10;17112:23;;17118:2;17113;:7;17112:23;;17107:28;;17153:34;17148:2;:39;17141:46;;;;17237:10;17224:23;;17230:2;17225;:7;17224:23;;17219:28;;17265:34;17260:2;:39;17253:46;;;;17349:10;17336:23;;17342:2;17337;:7;17336:23;;17331:28;;17377:34;17372:2;:39;17365:46;;;;17461:10;17448:23;;17454:2;17449;:7;17448:23;;17443:28;;17489:34;17484:2;:39;17477:46;;;;17573:10;17560:23;;17566:2;17561;:7;17560:23;;17555:28;;17601:34;17596:2;:39;17589:46;;;;17685:10;17672:23;;17678:2;17673;:7;17672:23;;17667:28;;17713:34;17708:2;:39;17701:46;;;;17842:10;17835:17;;445:1;17835:17;;17829:2;17793:33;17787:3;:39;;;;;;:44;:66;17780:73;;;;14082:3826;;;;:::o;12351:418::-;12405:5;12418:9;12430:1;12418:13;;12437:9;12449:2;12437:14;;12466:3;12462:1;:7;12458:290;;;12509:58;12520:1;12516;:5;12509:58;;;12539:1;12533:7;;;;;12557:1;12550:8;;;;12509:58;;;12458:290;;;12622:7;12632:3;12622:13;;12617:125;12641:1;12637;:5;;;12617:125;;;12680:1;12673:8;;445:1;12673:8;;12667:1;:15;12663:71;;12702:1;12696:7;;;;;;;12722:1;12715:8;;;;12663:71;12650:1;12644:7;;;;;;;12617:125;;;;12458:290;12761:3;12754:10;;;;12351:418;;;:::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"./GoalZappToken.sol\";\nimport \"./Ownable.sol\";\nimport \"./BancorFormula.sol\";\nimport \"./SafeMath.sol\";\nimport \"./ERC20.sol\";\n/**\n * @title Bonding Curve\n * @dev Bonding curve contract based on Bacor formula\n */\ncontract BondingCurve is Ownable, BancorFormula, ERC20 {\n  using SafeMath for uint256;\n\n  /**\n   * @dev Available balance of reserve token in contract\n   */\n  uint256 public poolBalance;\n\n  /*\n   * @dev reserve ratio, represented in ppm, 1-1000000\n   * 1/3 corresponds to y= multiple * x^2\n   * 1/2 corresponds to y= multiple * x\n   * 2/3 corresponds to y= multiple * x^1/2\n   * multiple will depend on contract initialization,\n   * specifically totalAmount and poolBalance parameters\n   * we might want to add an 'initialize' function that will allow\n   * the owner to send ether to the contract and mint a given amount of tokens\n  */\n  uint32 public reserveRatio;\n\n  /*\n   * - Front-running attacks are currently mitigated by the following mechanisms:\n   * TODO - minimum return argument for each conversion provides a way to define a minimum/maximum price for the transaction\n   * - gas price limit prevents users from having control over the order of execution\n  */\n  //uint256 public gasPrice; \n  uint256 public gasPrice = 1000000000000 wei; // maximum gas price for bancor transactions\n\n  /**\n   * @dev default function\n   * gas ~ 91645\n   */\n  function() external payable {\n    buy();\n  }\n\n  /**\n   * @dev Buy tokens\n   * gas ~ 77825\n   * TODO implement maxAmount that helps prevent miner front-running\n   */\n  function buy() validGasPrice public payable returns(bool) {\n    require(msg.value > 0);\n    uint256 tokensToMint = calculatePurchaseReturn(_totalSupply, poolBalance, reserveRatio, msg.value);\n    _totalSupply = _totalSupply.add(tokensToMint);\n    _balances[msg.sender] = _balances[msg.sender].add(tokensToMint);\n    poolBalance = poolBalance.add(msg.value);\n    emit LogMint(tokensToMint, msg.value);\n    return true;\n  }\n\n  /**\n   * @dev Sell tokens\n   * gas ~ 86936\n   * @param sellAmount Amount of tokens to withdraw\n   * TODO implement maxAmount that helps prevent miner front-running\n   */\n  function sell(uint256 sellAmount) validGasPrice public returns(bool) {\n    require(sellAmount > 0 && _balances[msg.sender] >= sellAmount);\n    uint256 ethAmount = calculateSaleReturn(_totalSupply, poolBalance, reserveRatio, sellAmount);\n    msg.sender.transfer(ethAmount);\n    poolBalance = poolBalance.sub(ethAmount);\n    _balances[msg.sender] = _balances[msg.sender].sub(sellAmount);\n    _totalSupply = _totalSupply.sub(sellAmount);\n    emit LogWithdraw(sellAmount, ethAmount);\n    return true;\n  }\n\n  // verifies that the gas price is lower than the universal limit\n  modifier validGasPrice() {\n    emit GasPrice(gasPrice);\n    require(tx.gasprice <= gasPrice, \"sent gas higher than hardcoded gas price\");\n    _;\n  }\n\n  /**\n   * @dev Allows the owner to update the gas price limit\n   * @param _gasPrice The new gas price limit\n  */\n  function setGasPrice(uint256 _gasPrice) onlyOwner public {\n    require(_gasPrice > 0);\n    gasPrice = _gasPrice;\n  }\n\n  event LogMint(uint256 amountMinted, uint256 totalCost);\n  event LogWithdraw(uint256 amountWithdrawn, uint256 reward);\n  event LogBondingCurve(string logString, uint256 value);\n  event GasPrice(uint256 gp); \n}\n",
  "sourcePath": "/home/zmg/Scratch/gz/GoalZappTruffle/contracts/BondingCurve.sol",
  "ast": {
    "absolutePath": "/home/zmg/Scratch/gz/GoalZappTruffle/contracts/BondingCurve.sol",
    "exportedSymbols": {
      "BondingCurve": [
        514
      ]
    },
    "id": 515,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 294,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "absolutePath": "/home/zmg/Scratch/gz/GoalZappTruffle/contracts/GoalZappToken.sol",
        "file": "./GoalZappToken.sol",
        "id": 295,
        "nodeType": "ImportDirective",
        "scope": 515,
        "sourceUnit": 3210,
        "src": "25:29:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/zmg/Scratch/gz/GoalZappTruffle/contracts/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 296,
        "nodeType": "ImportDirective",
        "scope": 515,
        "sourceUnit": 3447,
        "src": "55:23:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/zmg/Scratch/gz/GoalZappTruffle/contracts/BancorFormula.sol",
        "file": "./BancorFormula.sol",
        "id": 297,
        "nodeType": "ImportDirective",
        "scope": 515,
        "sourceUnit": 293,
        "src": "79:29:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/zmg/Scratch/gz/GoalZappTruffle/contracts/SafeMath.sol",
        "file": "./SafeMath.sol",
        "id": 298,
        "nodeType": "ImportDirective",
        "scope": 515,
        "sourceUnit": 5517,
        "src": "109:24:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/zmg/Scratch/gz/GoalZappTruffle/contracts/ERC20.sol",
        "file": "./ERC20.sol",
        "id": 299,
        "nodeType": "ImportDirective",
        "scope": 515,
        "sourceUnit": 1051,
        "src": "134:21:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 300,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3446,
              "src": "267:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$3446",
                "typeString": "contract Ownable"
              }
            },
            "id": 301,
            "nodeType": "InheritanceSpecifier",
            "src": "267:7:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 302,
              "name": "BancorFormula",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 292,
              "src": "276:13:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BancorFormula_$292",
                "typeString": "contract BancorFormula"
              }
            },
            "id": 303,
            "nodeType": "InheritanceSpecifier",
            "src": "276:13:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 304,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1050,
              "src": "291:5:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$1050",
                "typeString": "contract ERC20"
              }
            },
            "id": 305,
            "nodeType": "InheritanceSpecifier",
            "src": "291:5:3"
          }
        ],
        "contractDependencies": [
          80,
          1050,
          292,
          588,
          1183,
          3278,
          3446,
          4853,
          4988,
          5302
        ],
        "contractKind": "contract",
        "documentation": "@title Bonding Curve\n@dev Bonding curve contract based on Bacor formula",
        "fullyImplemented": true,
        "id": 514,
        "linearizedBaseContracts": [
          514,
          1050,
          3278,
          5302,
          4988,
          80,
          1183,
          588,
          292,
          4853,
          3446
        ],
        "name": "BondingCurve",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 308,
            "libraryName": {
              "contractScope": null,
              "id": 306,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5516,
              "src": "307:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$5516",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "301:27:3",
            "typeName": {
              "id": 307,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "320:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 310,
            "name": "poolBalance",
            "nodeType": "VariableDeclaration",
            "scope": 514,
            "src": "401:26:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 309,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "401:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 312,
            "name": "reserveRatio",
            "nodeType": "VariableDeclaration",
            "scope": 514,
            "src": "880:26:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 311,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "880:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 315,
            "name": "gasPrice",
            "nodeType": "VariableDeclaration",
            "scope": 514,
            "src": "1244:43:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 313,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1244:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31303030303030303030303030",
              "id": 314,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1270:17:3",
              "subdenomination": "wei",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000_by_1",
                "typeString": "int_const 1000000000000"
              },
              "value": "1000000000000"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 321,
              "nodeType": "Block",
              "src": "1421:16:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 318,
                      "name": "buy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 383,
                      "src": "1427:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bool_$",
                        "typeString": "function () returns (bool)"
                      }
                    },
                    "id": 319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1427:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 320,
                  "nodeType": "ExpressionStatement",
                  "src": "1427:5:3"
                }
              ]
            },
            "documentation": "@dev default function\ngas ~ 91645",
            "id": 322,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 316,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1401:2:3"
            },
            "returnParameters": {
              "id": 317,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1421:0:3"
            },
            "scope": 514,
            "src": "1393:44:3",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 382,
              "nodeType": "Block",
              "src": "1618:363:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 330,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5766,
                            "src": "1632:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1632:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1644:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1632:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 329,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5769,
                        5770
                      ],
                      "referencedDeclaration": 5769,
                      "src": "1624:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1624:22:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 335,
                  "nodeType": "ExpressionStatement",
                  "src": "1624:22:3"
                },
                {
                  "assignments": [
                    337
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 337,
                      "name": "tokensToMint",
                      "nodeType": "VariableDeclaration",
                      "scope": 382,
                      "src": "1652:20:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 336,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1652:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 345,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 339,
                        "name": "_totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 616,
                        "src": "1699:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 340,
                        "name": "poolBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 310,
                        "src": "1713:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 341,
                        "name": "reserveRatio",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 312,
                        "src": "1726:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 342,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5766,
                          "src": "1740:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 343,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1740:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 338,
                      "name": "calculatePurchaseReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 184,
                      "src": "1675:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint32_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint32,uint256) view returns (uint256)"
                      }
                    },
                    "id": 344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1675:75:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1652:98:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 346,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 616,
                      "src": "1756:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 349,
                          "name": "tokensToMint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 337,
                          "src": "1788:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 347,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 616,
                          "src": "1771:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 348,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5410,
                        "src": "1771:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 350,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1771:30:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1756:45:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 352,
                  "nodeType": "ExpressionStatement",
                  "src": "1756:45:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 353,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 608,
                        "src": "1807:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 356,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 354,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5766,
                          "src": "1817:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 355,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1817:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1807:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 362,
                          "name": "tokensToMint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 337,
                          "src": "1857:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 357,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 608,
                            "src": "1831:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 360,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 358,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5766,
                              "src": "1841:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 359,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1841:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1831:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 361,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5410,
                        "src": "1831:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 363,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1831:39:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1807:63:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 365,
                  "nodeType": "ExpressionStatement",
                  "src": "1807:63:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 366,
                      "name": "poolBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 310,
                      "src": "1876:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 369,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5766,
                            "src": "1906:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 370,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1906:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 367,
                          "name": "poolBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 310,
                          "src": "1890:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 368,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5410,
                        "src": "1890:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 371,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1890:26:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1876:40:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 373,
                  "nodeType": "ExpressionStatement",
                  "src": "1876:40:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 375,
                        "name": "tokensToMint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 337,
                        "src": "1935:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 376,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5766,
                          "src": "1949:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 377,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1949:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 374,
                      "name": "LogMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 497,
                      "src": "1927:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1927:32:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 379,
                  "nodeType": "EmitStatement",
                  "src": "1922:37:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1972:4:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 328,
                  "id": 381,
                  "nodeType": "Return",
                  "src": "1965:11:3"
                }
              ]
            },
            "documentation": "@dev Buy tokens\ngas ~ 77825\nTODO implement maxAmount that helps prevent miner front-running",
            "id": 383,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 325,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 324,
                  "name": "validGasPrice",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 473,
                  "src": "1575:13:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1575:13:3"
              }
            ],
            "name": "buy",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 323,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1572:2:3"
            },
            "returnParameters": {
              "id": 328,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 327,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 383,
                  "src": "1612:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 326,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1612:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1611:6:3"
            },
            "scope": 514,
            "src": "1560:421:3",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 456,
              "nodeType": "Block",
              "src": "2226:431:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 395,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 393,
                            "name": "sellAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 385,
                            "src": "2240:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 394,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2253:1:3",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2240:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 401,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 396,
                              "name": "_balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 608,
                              "src": "2258:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 399,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 397,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5766,
                                "src": "2268:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 398,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "2268:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2258:21:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 400,
                            "name": "sellAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 385,
                            "src": "2283:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2258:35:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2240:53:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 392,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5769,
                        5770
                      ],
                      "referencedDeclaration": 5769,
                      "src": "2232:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2232:62:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 404,
                  "nodeType": "ExpressionStatement",
                  "src": "2232:62:3"
                },
                {
                  "assignments": [
                    406
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 406,
                      "name": "ethAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 456,
                      "src": "2300:17:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 405,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2300:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 413,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 408,
                        "name": "_totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 616,
                        "src": "2340:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 409,
                        "name": "poolBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 310,
                        "src": "2354:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 410,
                        "name": "reserveRatio",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 312,
                        "src": "2367:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 411,
                        "name": "sellAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 385,
                        "src": "2381:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 407,
                      "name": "calculateSaleReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 291,
                      "src": "2320:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint32_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint32,uint256) view returns (uint256)"
                      }
                    },
                    "id": 412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2320:72:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2300:92:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 419,
                        "name": "ethAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 406,
                        "src": "2418:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 414,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5766,
                          "src": "2398:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 417,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2398:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 418,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2398:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2398:30:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 421,
                  "nodeType": "ExpressionStatement",
                  "src": "2398:30:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 422,
                      "name": "poolBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 310,
                      "src": "2434:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 425,
                          "name": "ethAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 406,
                          "src": "2464:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 423,
                          "name": "poolBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 310,
                          "src": "2448:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 424,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5435,
                        "src": "2448:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 426,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2448:26:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2434:40:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 428,
                  "nodeType": "ExpressionStatement",
                  "src": "2434:40:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 429,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 608,
                        "src": "2480:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 432,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 430,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5766,
                          "src": "2490:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 431,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2490:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2480:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 438,
                          "name": "sellAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 385,
                          "src": "2530:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 433,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 608,
                            "src": "2504:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 436,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 434,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5766,
                              "src": "2514:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 435,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2514:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2504:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 437,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5435,
                        "src": "2504:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 439,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2504:37:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2480:61:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 441,
                  "nodeType": "ExpressionStatement",
                  "src": "2480:61:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 442,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 616,
                      "src": "2547:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 445,
                          "name": "sellAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 385,
                          "src": "2579:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 443,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 616,
                          "src": "2562:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 444,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5435,
                        "src": "2562:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 446,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2562:28:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2547:43:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 448,
                  "nodeType": "ExpressionStatement",
                  "src": "2547:43:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 450,
                        "name": "sellAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 385,
                        "src": "2613:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 451,
                        "name": "ethAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 406,
                        "src": "2625:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 449,
                      "name": "LogWithdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 503,
                      "src": "2601:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2601:34:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 453,
                  "nodeType": "EmitStatement",
                  "src": "2596:39:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2648:4:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 391,
                  "id": 455,
                  "nodeType": "Return",
                  "src": "2641:11:3"
                }
              ]
            },
            "documentation": "@dev Sell tokens\ngas ~ 86936\n@param sellAmount Amount of tokens to withdraw\nTODO implement maxAmount that helps prevent miner front-running",
            "id": 457,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 388,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 387,
                  "name": "validGasPrice",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 473,
                  "src": "2191:13:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2191:13:3"
              }
            ],
            "name": "sell",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 386,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 385,
                  "name": "sellAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 457,
                  "src": "2171:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 384,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2171:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2170:20:3"
            },
            "returnParameters": {
              "id": 391,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 390,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 457,
                  "src": "2220:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 389,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2220:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2219:6:3"
            },
            "scope": 514,
            "src": "2157:500:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 472,
              "nodeType": "Block",
              "src": "2753:123:3",
              "statements": [
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 460,
                        "name": "gasPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 315,
                        "src": "2773:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 459,
                      "name": "GasPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 513,
                      "src": "2764:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 461,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2764:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 462,
                  "nodeType": "EmitStatement",
                  "src": "2759:23:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 467,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 464,
                            "name": "tx",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5778,
                            "src": "2796:2:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_transaction",
                              "typeString": "tx"
                            }
                          },
                          "id": 465,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "gasprice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2796:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 466,
                          "name": "gasPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 315,
                          "src": "2811:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2796:23:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "73656e742067617320686967686572207468616e2068617264636f64656420676173207072696365",
                        "id": 468,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2821:42:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c07772cefa27ad350ebd1b54ec8a4dc7b3bcc1b2d9d7aad240bddc0e334a1971",
                          "typeString": "literal_string \"sent gas higher than hardcoded gas price\""
                        },
                        "value": "sent gas higher than hardcoded gas price"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c07772cefa27ad350ebd1b54ec8a4dc7b3bcc1b2d9d7aad240bddc0e334a1971",
                          "typeString": "literal_string \"sent gas higher than hardcoded gas price\""
                        }
                      ],
                      "id": 463,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5769,
                        5770
                      ],
                      "referencedDeclaration": 5770,
                      "src": "2788:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2788:76:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 470,
                  "nodeType": "ExpressionStatement",
                  "src": "2788:76:3"
                },
                {
                  "id": 471,
                  "nodeType": "PlaceholderStatement",
                  "src": "2870:1:3"
                }
              ]
            },
            "documentation": null,
            "id": 473,
            "name": "validGasPrice",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 458,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2750:2:3"
            },
            "src": "2728:148:3",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 490,
              "nodeType": "Block",
              "src": "3051:59:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 483,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 481,
                          "name": "_gasPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 475,
                          "src": "3065:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 482,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3077:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3065:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 480,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5769,
                        5770
                      ],
                      "referencedDeclaration": 5769,
                      "src": "3057:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 484,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3057:22:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 485,
                  "nodeType": "ExpressionStatement",
                  "src": "3057:22:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 486,
                      "name": "gasPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 315,
                      "src": "3085:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 487,
                      "name": "_gasPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 475,
                      "src": "3096:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3085:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 489,
                  "nodeType": "ExpressionStatement",
                  "src": "3085:20:3"
                }
              ]
            },
            "documentation": "@dev Allows the owner to update the gas price limit\n@param _gasPrice The new gas price limit",
            "id": 491,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 478,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 477,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3379,
                  "src": "3034:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3034:9:3"
              }
            ],
            "name": "setGasPrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 476,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 475,
                  "name": "_gasPrice",
                  "nodeType": "VariableDeclaration",
                  "scope": 491,
                  "src": "3015:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 474,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3015:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3014:19:3"
            },
            "returnParameters": {
              "id": 479,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3051:0:3"
            },
            "scope": 514,
            "src": "2994:116:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 497,
            "name": "LogMint",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 496,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 493,
                  "indexed": false,
                  "name": "amountMinted",
                  "nodeType": "VariableDeclaration",
                  "scope": 497,
                  "src": "3128:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 492,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3128:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 495,
                  "indexed": false,
                  "name": "totalCost",
                  "nodeType": "VariableDeclaration",
                  "scope": 497,
                  "src": "3150:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 494,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3150:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3127:41:3"
            },
            "src": "3114:55:3"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 503,
            "name": "LogWithdraw",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 502,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 499,
                  "indexed": false,
                  "name": "amountWithdrawn",
                  "nodeType": "VariableDeclaration",
                  "scope": 503,
                  "src": "3190:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 498,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3190:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 501,
                  "indexed": false,
                  "name": "reward",
                  "nodeType": "VariableDeclaration",
                  "scope": 503,
                  "src": "3215:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 500,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3215:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3189:41:3"
            },
            "src": "3172:59:3"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 509,
            "name": "LogBondingCurve",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 508,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 505,
                  "indexed": false,
                  "name": "logString",
                  "nodeType": "VariableDeclaration",
                  "scope": 509,
                  "src": "3256:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 504,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3256:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 507,
                  "indexed": false,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 509,
                  "src": "3274:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 506,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3274:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3255:33:3"
            },
            "src": "3234:55:3"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 513,
            "name": "GasPrice",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 512,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 511,
                  "indexed": false,
                  "name": "gp",
                  "nodeType": "VariableDeclaration",
                  "scope": 513,
                  "src": "3307:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 510,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3307:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3306:12:3"
            },
            "src": "3292:27:3"
          }
        ],
        "scope": 515,
        "src": "242:3080:3"
      }
    ],
    "src": "0:3323:3"
  },
  "legacyAST": {
    "absolutePath": "/home/zmg/Scratch/gz/GoalZappTruffle/contracts/BondingCurve.sol",
    "exportedSymbols": {
      "BondingCurve": [
        514
      ]
    },
    "id": 515,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 294,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "absolutePath": "/home/zmg/Scratch/gz/GoalZappTruffle/contracts/GoalZappToken.sol",
        "file": "./GoalZappToken.sol",
        "id": 295,
        "nodeType": "ImportDirective",
        "scope": 515,
        "sourceUnit": 3210,
        "src": "25:29:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/zmg/Scratch/gz/GoalZappTruffle/contracts/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 296,
        "nodeType": "ImportDirective",
        "scope": 515,
        "sourceUnit": 3447,
        "src": "55:23:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/zmg/Scratch/gz/GoalZappTruffle/contracts/BancorFormula.sol",
        "file": "./BancorFormula.sol",
        "id": 297,
        "nodeType": "ImportDirective",
        "scope": 515,
        "sourceUnit": 293,
        "src": "79:29:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/zmg/Scratch/gz/GoalZappTruffle/contracts/SafeMath.sol",
        "file": "./SafeMath.sol",
        "id": 298,
        "nodeType": "ImportDirective",
        "scope": 515,
        "sourceUnit": 5517,
        "src": "109:24:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/zmg/Scratch/gz/GoalZappTruffle/contracts/ERC20.sol",
        "file": "./ERC20.sol",
        "id": 299,
        "nodeType": "ImportDirective",
        "scope": 515,
        "sourceUnit": 1051,
        "src": "134:21:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 300,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3446,
              "src": "267:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$3446",
                "typeString": "contract Ownable"
              }
            },
            "id": 301,
            "nodeType": "InheritanceSpecifier",
            "src": "267:7:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 302,
              "name": "BancorFormula",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 292,
              "src": "276:13:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BancorFormula_$292",
                "typeString": "contract BancorFormula"
              }
            },
            "id": 303,
            "nodeType": "InheritanceSpecifier",
            "src": "276:13:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 304,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1050,
              "src": "291:5:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$1050",
                "typeString": "contract ERC20"
              }
            },
            "id": 305,
            "nodeType": "InheritanceSpecifier",
            "src": "291:5:3"
          }
        ],
        "contractDependencies": [
          80,
          1050,
          292,
          588,
          1183,
          3278,
          3446,
          4853,
          4988,
          5302
        ],
        "contractKind": "contract",
        "documentation": "@title Bonding Curve\n@dev Bonding curve contract based on Bacor formula",
        "fullyImplemented": true,
        "id": 514,
        "linearizedBaseContracts": [
          514,
          1050,
          3278,
          5302,
          4988,
          80,
          1183,
          588,
          292,
          4853,
          3446
        ],
        "name": "BondingCurve",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 308,
            "libraryName": {
              "contractScope": null,
              "id": 306,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5516,
              "src": "307:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$5516",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "301:27:3",
            "typeName": {
              "id": 307,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "320:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 310,
            "name": "poolBalance",
            "nodeType": "VariableDeclaration",
            "scope": 514,
            "src": "401:26:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 309,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "401:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 312,
            "name": "reserveRatio",
            "nodeType": "VariableDeclaration",
            "scope": 514,
            "src": "880:26:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 311,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "880:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 315,
            "name": "gasPrice",
            "nodeType": "VariableDeclaration",
            "scope": 514,
            "src": "1244:43:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 313,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1244:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31303030303030303030303030",
              "id": 314,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1270:17:3",
              "subdenomination": "wei",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000_by_1",
                "typeString": "int_const 1000000000000"
              },
              "value": "1000000000000"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 321,
              "nodeType": "Block",
              "src": "1421:16:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 318,
                      "name": "buy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 383,
                      "src": "1427:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bool_$",
                        "typeString": "function () returns (bool)"
                      }
                    },
                    "id": 319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1427:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 320,
                  "nodeType": "ExpressionStatement",
                  "src": "1427:5:3"
                }
              ]
            },
            "documentation": "@dev default function\ngas ~ 91645",
            "id": 322,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 316,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1401:2:3"
            },
            "returnParameters": {
              "id": 317,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1421:0:3"
            },
            "scope": 514,
            "src": "1393:44:3",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 382,
              "nodeType": "Block",
              "src": "1618:363:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 330,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5766,
                            "src": "1632:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1632:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1644:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1632:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 329,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5769,
                        5770
                      ],
                      "referencedDeclaration": 5769,
                      "src": "1624:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1624:22:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 335,
                  "nodeType": "ExpressionStatement",
                  "src": "1624:22:3"
                },
                {
                  "assignments": [
                    337
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 337,
                      "name": "tokensToMint",
                      "nodeType": "VariableDeclaration",
                      "scope": 382,
                      "src": "1652:20:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 336,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1652:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 345,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 339,
                        "name": "_totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 616,
                        "src": "1699:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 340,
                        "name": "poolBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 310,
                        "src": "1713:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 341,
                        "name": "reserveRatio",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 312,
                        "src": "1726:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 342,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5766,
                          "src": "1740:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 343,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1740:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 338,
                      "name": "calculatePurchaseReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 184,
                      "src": "1675:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint32_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint32,uint256) view returns (uint256)"
                      }
                    },
                    "id": 344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1675:75:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1652:98:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 346,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 616,
                      "src": "1756:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 349,
                          "name": "tokensToMint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 337,
                          "src": "1788:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 347,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 616,
                          "src": "1771:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 348,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5410,
                        "src": "1771:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 350,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1771:30:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1756:45:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 352,
                  "nodeType": "ExpressionStatement",
                  "src": "1756:45:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 353,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 608,
                        "src": "1807:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 356,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 354,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5766,
                          "src": "1817:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 355,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1817:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1807:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 362,
                          "name": "tokensToMint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 337,
                          "src": "1857:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 357,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 608,
                            "src": "1831:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 360,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 358,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5766,
                              "src": "1841:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 359,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1841:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1831:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 361,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5410,
                        "src": "1831:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 363,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1831:39:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1807:63:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 365,
                  "nodeType": "ExpressionStatement",
                  "src": "1807:63:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 366,
                      "name": "poolBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 310,
                      "src": "1876:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 369,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5766,
                            "src": "1906:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 370,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1906:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 367,
                          "name": "poolBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 310,
                          "src": "1890:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 368,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5410,
                        "src": "1890:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 371,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1890:26:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1876:40:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 373,
                  "nodeType": "ExpressionStatement",
                  "src": "1876:40:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 375,
                        "name": "tokensToMint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 337,
                        "src": "1935:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 376,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5766,
                          "src": "1949:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 377,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1949:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 374,
                      "name": "LogMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 497,
                      "src": "1927:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1927:32:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 379,
                  "nodeType": "EmitStatement",
                  "src": "1922:37:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1972:4:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 328,
                  "id": 381,
                  "nodeType": "Return",
                  "src": "1965:11:3"
                }
              ]
            },
            "documentation": "@dev Buy tokens\ngas ~ 77825\nTODO implement maxAmount that helps prevent miner front-running",
            "id": 383,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 325,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 324,
                  "name": "validGasPrice",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 473,
                  "src": "1575:13:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1575:13:3"
              }
            ],
            "name": "buy",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 323,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1572:2:3"
            },
            "returnParameters": {
              "id": 328,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 327,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 383,
                  "src": "1612:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 326,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1612:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1611:6:3"
            },
            "scope": 514,
            "src": "1560:421:3",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 456,
              "nodeType": "Block",
              "src": "2226:431:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 395,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 393,
                            "name": "sellAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 385,
                            "src": "2240:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 394,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2253:1:3",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2240:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 401,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 396,
                              "name": "_balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 608,
                              "src": "2258:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 399,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 397,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5766,
                                "src": "2268:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 398,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "2268:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2258:21:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 400,
                            "name": "sellAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 385,
                            "src": "2283:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2258:35:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2240:53:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 392,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5769,
                        5770
                      ],
                      "referencedDeclaration": 5769,
                      "src": "2232:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2232:62:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 404,
                  "nodeType": "ExpressionStatement",
                  "src": "2232:62:3"
                },
                {
                  "assignments": [
                    406
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 406,
                      "name": "ethAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 456,
                      "src": "2300:17:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 405,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2300:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 413,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 408,
                        "name": "_totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 616,
                        "src": "2340:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 409,
                        "name": "poolBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 310,
                        "src": "2354:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 410,
                        "name": "reserveRatio",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 312,
                        "src": "2367:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 411,
                        "name": "sellAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 385,
                        "src": "2381:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 407,
                      "name": "calculateSaleReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 291,
                      "src": "2320:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint32_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint32,uint256) view returns (uint256)"
                      }
                    },
                    "id": 412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2320:72:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2300:92:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 419,
                        "name": "ethAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 406,
                        "src": "2418:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 414,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5766,
                          "src": "2398:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 417,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2398:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 418,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2398:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2398:30:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 421,
                  "nodeType": "ExpressionStatement",
                  "src": "2398:30:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 422,
                      "name": "poolBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 310,
                      "src": "2434:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 425,
                          "name": "ethAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 406,
                          "src": "2464:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 423,
                          "name": "poolBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 310,
                          "src": "2448:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 424,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5435,
                        "src": "2448:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 426,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2448:26:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2434:40:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 428,
                  "nodeType": "ExpressionStatement",
                  "src": "2434:40:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 429,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 608,
                        "src": "2480:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 432,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 430,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5766,
                          "src": "2490:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 431,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2490:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2480:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 438,
                          "name": "sellAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 385,
                          "src": "2530:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 433,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 608,
                            "src": "2504:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 436,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 434,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5766,
                              "src": "2514:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 435,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2514:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2504:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 437,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5435,
                        "src": "2504:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 439,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2504:37:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2480:61:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 441,
                  "nodeType": "ExpressionStatement",
                  "src": "2480:61:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 442,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 616,
                      "src": "2547:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 445,
                          "name": "sellAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 385,
                          "src": "2579:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 443,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 616,
                          "src": "2562:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 444,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5435,
                        "src": "2562:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 446,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2562:28:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2547:43:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 448,
                  "nodeType": "ExpressionStatement",
                  "src": "2547:43:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 450,
                        "name": "sellAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 385,
                        "src": "2613:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 451,
                        "name": "ethAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 406,
                        "src": "2625:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 449,
                      "name": "LogWithdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 503,
                      "src": "2601:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2601:34:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 453,
                  "nodeType": "EmitStatement",
                  "src": "2596:39:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2648:4:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 391,
                  "id": 455,
                  "nodeType": "Return",
                  "src": "2641:11:3"
                }
              ]
            },
            "documentation": "@dev Sell tokens\ngas ~ 86936\n@param sellAmount Amount of tokens to withdraw\nTODO implement maxAmount that helps prevent miner front-running",
            "id": 457,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 388,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 387,
                  "name": "validGasPrice",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 473,
                  "src": "2191:13:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2191:13:3"
              }
            ],
            "name": "sell",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 386,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 385,
                  "name": "sellAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 457,
                  "src": "2171:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 384,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2171:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2170:20:3"
            },
            "returnParameters": {
              "id": 391,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 390,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 457,
                  "src": "2220:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 389,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2220:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2219:6:3"
            },
            "scope": 514,
            "src": "2157:500:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 472,
              "nodeType": "Block",
              "src": "2753:123:3",
              "statements": [
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 460,
                        "name": "gasPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 315,
                        "src": "2773:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 459,
                      "name": "GasPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 513,
                      "src": "2764:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 461,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2764:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 462,
                  "nodeType": "EmitStatement",
                  "src": "2759:23:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 467,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 464,
                            "name": "tx",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5778,
                            "src": "2796:2:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_transaction",
                              "typeString": "tx"
                            }
                          },
                          "id": 465,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "gasprice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2796:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 466,
                          "name": "gasPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 315,
                          "src": "2811:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2796:23:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "73656e742067617320686967686572207468616e2068617264636f64656420676173207072696365",
                        "id": 468,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2821:42:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c07772cefa27ad350ebd1b54ec8a4dc7b3bcc1b2d9d7aad240bddc0e334a1971",
                          "typeString": "literal_string \"sent gas higher than hardcoded gas price\""
                        },
                        "value": "sent gas higher than hardcoded gas price"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c07772cefa27ad350ebd1b54ec8a4dc7b3bcc1b2d9d7aad240bddc0e334a1971",
                          "typeString": "literal_string \"sent gas higher than hardcoded gas price\""
                        }
                      ],
                      "id": 463,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5769,
                        5770
                      ],
                      "referencedDeclaration": 5770,
                      "src": "2788:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2788:76:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 470,
                  "nodeType": "ExpressionStatement",
                  "src": "2788:76:3"
                },
                {
                  "id": 471,
                  "nodeType": "PlaceholderStatement",
                  "src": "2870:1:3"
                }
              ]
            },
            "documentation": null,
            "id": 473,
            "name": "validGasPrice",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 458,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2750:2:3"
            },
            "src": "2728:148:3",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 490,
              "nodeType": "Block",
              "src": "3051:59:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 483,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 481,
                          "name": "_gasPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 475,
                          "src": "3065:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 482,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3077:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3065:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 480,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5769,
                        5770
                      ],
                      "referencedDeclaration": 5769,
                      "src": "3057:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 484,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3057:22:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 485,
                  "nodeType": "ExpressionStatement",
                  "src": "3057:22:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 486,
                      "name": "gasPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 315,
                      "src": "3085:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 487,
                      "name": "_gasPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 475,
                      "src": "3096:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3085:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 489,
                  "nodeType": "ExpressionStatement",
                  "src": "3085:20:3"
                }
              ]
            },
            "documentation": "@dev Allows the owner to update the gas price limit\n@param _gasPrice The new gas price limit",
            "id": 491,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 478,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 477,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3379,
                  "src": "3034:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3034:9:3"
              }
            ],
            "name": "setGasPrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 476,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 475,
                  "name": "_gasPrice",
                  "nodeType": "VariableDeclaration",
                  "scope": 491,
                  "src": "3015:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 474,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3015:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3014:19:3"
            },
            "returnParameters": {
              "id": 479,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3051:0:3"
            },
            "scope": 514,
            "src": "2994:116:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 497,
            "name": "LogMint",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 496,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 493,
                  "indexed": false,
                  "name": "amountMinted",
                  "nodeType": "VariableDeclaration",
                  "scope": 497,
                  "src": "3128:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 492,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3128:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 495,
                  "indexed": false,
                  "name": "totalCost",
                  "nodeType": "VariableDeclaration",
                  "scope": 497,
                  "src": "3150:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 494,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3150:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3127:41:3"
            },
            "src": "3114:55:3"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 503,
            "name": "LogWithdraw",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 502,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 499,
                  "indexed": false,
                  "name": "amountWithdrawn",
                  "nodeType": "VariableDeclaration",
                  "scope": 503,
                  "src": "3190:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 498,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3190:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 501,
                  "indexed": false,
                  "name": "reward",
                  "nodeType": "VariableDeclaration",
                  "scope": 503,
                  "src": "3215:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 500,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3215:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3189:41:3"
            },
            "src": "3172:59:3"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 509,
            "name": "LogBondingCurve",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 508,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 505,
                  "indexed": false,
                  "name": "logString",
                  "nodeType": "VariableDeclaration",
                  "scope": 509,
                  "src": "3256:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 504,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3256:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 507,
                  "indexed": false,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 509,
                  "src": "3274:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 506,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3274:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3255:33:3"
            },
            "src": "3234:55:3"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 513,
            "name": "GasPrice",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 512,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 511,
                  "indexed": false,
                  "name": "gp",
                  "nodeType": "VariableDeclaration",
                  "scope": 513,
                  "src": "3307:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 510,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3307:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3306:12:3"
            },
            "src": "3292:27:3"
          }
        ],
        "scope": 515,
        "src": "242:3080:3"
      }
    ],
    "src": "0:3323:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.16",
  "updatedAt": "2019-09-18T20:04:07.179Z",
  "devdoc": {
    "details": "Bonding curve contract based on Bacor formula",
    "methods": {
      "allowance(address,address)": {
        "details": "See `IERC20.allowance`."
      },
      "approve(address,uint256)": {
        "details": "See `IERC20.approve`.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See `IERC20.balanceOf`./"
      },
      "buy()": {
        "details": "Buy tokens gas ~ 77825 TODO implement maxAmount that helps prevent miner front-running"
      },
      "calculatePurchaseReturn(uint256,uint256,uint32,uint256)": {
        "details": "given a token supply, connector balance, weight and a deposit amount (in the connector token), calculates the return for a given conversion (in the main token)   * Formula: Return = _supply * ((1 + _depositAmount / _connectorBalance) ^ (_connectorWeight / 1000000) - 1)",
        "params": {
          "_connectorBalance": "total connector balance",
          "_connectorWeight": "connector weight, represented in ppm, 1-1000000",
          "_depositAmount": "deposit amount, in connector token",
          "_supply": "token total supply"
        },
        "return": "purchase return amount"
      },
      "calculateSaleReturn(uint256,uint256,uint32,uint256)": {
        "details": "given a token supply, connector balance, weight and a sell amount (in the main token), calculates the return for a given conversion (in the connector token)   * Formula: Return = _connectorBalance * (1 - (1 - _sellAmount / _supply) ^ (1 / (_connectorWeight / 1000000)))",
        "params": {
          "_connectorBalance": "total connector",
          "_connectorWeight": "constant connector Weight, represented in ppm, 1-1000000",
          "_sellAmount": "sell amount, in the token itself",
          "_supply": "token total supply"
        },
        "return": "sale return amount"
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "sell(uint256)": {
        "details": "Sell tokens gas ~ 86936",
        "params": {
          "sellAmount": "Amount of tokens to withdraw TODO implement maxAmount that helps prevent miner front-running"
        }
      },
      "setGasPrice(uint256)": {
        "details": "Allows the owner to update the gas price limit",
        "params": {
          "_gasPrice": "The new gas price limit"
        }
      },
      "totalSupply()": {
        "details": "See `IERC20.totalSupply`."
      },
      "transfer(address,uint256)": {
        "details": "See `IERC20.transfer`.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See `IERC20.transferFrom`.     * Emits an `Approval` event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of `ERC20`;     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `value`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "Bonding Curve"
  },
  "userdoc": {
    "methods": {}
  }
}